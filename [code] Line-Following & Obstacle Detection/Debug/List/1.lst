
AVRASM ver. 2.1.30  F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm Thu May 04 14:25:18 2023

F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1089): warning: Register r4 already defined by the .DEF directive
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1090): warning: Register r5 already defined by the .DEF directive
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1091): warning: Register r7 already defined by the .DEF directive
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1092): warning: Register r6 already defined by the .DEF directive
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1093): warning: Register r9 already defined by the .DEF directive
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1094): warning: Register r10 already defined by the .DEF directive
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1095): warning: Register r11 already defined by the .DEF directive
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1096): warning: Register r12 already defined by the .DEF directive
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1097): warning: Register r13 already defined by the .DEF directive
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1098): warning: Register r8 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega64A
                 ;Program type           : Application
                 ;Clock frequency        : 16.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega64A
                 	#pragma AVRPART MEMORY PROG_FLASH 65536
                 	#pragma AVRPART MEMORY EEPROM 2048
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _l=R4
                 	.DEF _l_msb=R5
                 	.DEF _SpeedR=R7
                 	.DEF _SpeedL=R6
                 	.DEF _V=R9
                 	.DEF _RS=R10
                 	.DEF _RS_msb=R11
                 	.DEF _LsenKeyON=R12
                 	.DEF _LsenKeyON_msb=R13
                 	.DEF _gg=R8
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0133 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0185 	JMP  _ext_int5_isr
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0225 	JMP  _timer2_ovf_isr
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 01d4 	JMP  _timer1_ovf_isr
00001e 940c 0000 	JMP  0x00
000020 940c 0209 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00004f 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1155): warning: .cseg .db misalignment - padding zero byte
000050 0000      	.DB  0x0
                 
                 _0x3:
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1158): warning: .cseg .db misalignment - padding zero byte
000051 0002      	.DB  0x2
                 _0x4:
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1160): warning: .cseg .db misalignment - padding zero byte
000052 0064      	.DB  0x64
                 _0x0:
000053 2d2d
000054 3100
000055 0032
000056 3331      	.DB  0x2D,0x2D,0x0,0x31,0x32,0x0,0x31,0x33
000057 3100
000058 0031
000059 3431
00005a 3100      	.DB  0x0,0x31,0x31,0x0,0x31,0x34,0x0,0x31
00005b 0030
00005c 3531
00005d 3000
00005e 0039      	.DB  0x30,0x0,0x31,0x35,0x0,0x30,0x39,0x0
00005f 3631
000060 3000
000061 0038
000062 3731      	.DB  0x31,0x36,0x0,0x30,0x38,0x0,0x31,0x37
000063 3000
000064 0037
000065 3831
000066 3000      	.DB  0x0,0x30,0x37,0x0,0x31,0x38,0x0,0x30
000067 0036
000068 3931
000069 3000
00006a 0035      	.DB  0x36,0x0,0x31,0x39,0x0,0x30,0x35,0x0
00006b 3032
00006c 3000
00006d 0034
00006e 3132      	.DB  0x32,0x30,0x0,0x30,0x34,0x0,0x32,0x31
00006f 3000
000070 0033
000071 3232
000072 3000      	.DB  0x0,0x30,0x33,0x0,0x32,0x32,0x0,0x30
000073 0032
000074 3332
000075 3000
000076 0031      	.DB  0x32,0x0,0x32,0x33,0x0,0x30,0x31,0x0
000077 3432
000078 4c00
000079 6e69
00007a 2065      	.DB  0x32,0x34,0x0,0x4C,0x69,0x6E,0x65,0x20
00007b 6f46
00007c 6c6c
00007d 776f
00007e 0065      	.DB  0x46,0x6F,0x6C,0x6C,0x6F,0x77,0x65,0x0
00007f 303c
000080 003e
000081 7073
000082 6565      	.DB  0x3C,0x30,0x3E,0x0,0x73,0x70,0x65,0x65
000083 3a64
000084 2b20
000085 2500
000086 4300      	.DB  0x64,0x3A,0x20,0x2B,0x0,0x25,0x0,0x43
000087 6c6f
000088 726f
000089 5320
00008a 6e65      	.DB  0x6F,0x6C,0x6F,0x72,0x20,0x53,0x65,0x6E
00008b 6f73
00008c 0072
00008d 6573
00008e 3d74      	.DB  0x73,0x6F,0x72,0x0,0x73,0x65,0x74,0x3D
00008f 5500
000090 746c
000091 6172
000092 6f53      	.DB  0x0,0x55,0x6C,0x74,0x72,0x61,0x53,0x6F
000093 696e
000094 0063
000095 6d63
000096 2000      	.DB  0x6E,0x69,0x63,0x0,0x63,0x6D,0x0,0x20
000097 6573
000098 3d74
000099 7e35
00009a 3631      	.DB  0x73,0x65,0x74,0x3D,0x35,0x7E,0x31,0x36
00009b 4800
00009c 4c45
00009d 3a50
00009e 2020      	.DB  0x0,0x48,0x45,0x4C,0x50,0x3A,0x20,0x20
00009f 2020
0000a0 206f
0000a1 6f20
0000a2 2020      	.DB  0x20,0x20,0x6F,0x20,0x20,0x6F,0x20,0x20
0000a3 206f
0000a4 7300
0000a5 6977
0000a6 6374      	.DB  0x6F,0x20,0x0,0x73,0x77,0x69,0x74,0x63
0000a7 7368
0000a8 2020
0000a9 205e
0000aa 5e20      	.DB  0x68,0x73,0x20,0x20,0x5E,0x20,0x20,0x5E
0000ab 2020
0000ac 205e
0000ad 2000
0000ae 2020      	.DB  0x20,0x20,0x5E,0x20,0x0,0x20,0x20,0x20
0000af 2020
0000b0 2020
0000b1 2020
0000b2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000b3 2020
0000b4 2020
0000b5 0020
0000b6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x0,0x20,0x20
0000b7 2020
0000b8 2020
0000b9 2020
0000ba 2b20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x2B
0000bb 2020
0000bc 206f
0000bd 6f20
0000be 0020      	.DB  0x20,0x20,0x6F,0x20,0x20,0x6F,0x20,0x0
0000bf 3c20
0000c0 202d
0000c1 2020
0000c2 4220      	.DB  0x20,0x3C,0x2D,0x20,0x20,0x20,0x20,0x42
0000c3 6361
0000c4 206b
0000c5 2020
0000c6 2020      	.DB  0x61,0x63,0x6B,0x20,0x20,0x20,0x20,0x20
0000c7 0020
0000c8 2020
0000c9 2020
0000ca 2020      	.DB  0x20,0x0,0x20,0x20,0x20,0x20,0x20,0x20
0000cb 2020
0000cc 6f20
0000cd 2020
0000ce 202b      	.DB  0x20,0x20,0x20,0x6F,0x20,0x20,0x2B,0x20
0000cf 6f20
0000d0 0020
0000d1 2020
0000d2 2020      	.DB  0x20,0x6F,0x20,0x0,0x20,0x20,0x20,0x20
0000d3 2020
0000d4 2020
0000d5 2020
0000d6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000d7 2020
0000d8 2020
0000d9 0020
0000da 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x0,0x20,0x20
0000db 202d
0000dc 2020
0000dd 5320
0000de 7465      	.DB  0x2D,0x20,0x20,0x20,0x20,0x53,0x65,0x74
0000df 2020
0000e0 2d20
0000e1 2020
0000e2 0020      	.DB  0x20,0x20,0x20,0x2D,0x20,0x20,0x20,0x0
0000e3 2020
0000e4 2020
0000e5 2020
0000e6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000e7 6f20
0000e8 2020
0000e9 206f
0000ea 2b20      	.DB  0x20,0x6F,0x20,0x20,0x6F,0x20,0x20,0x2B
0000eb 0020
0000ec 2020
0000ed 2020
0000ee 5320      	.DB  0x20,0x0,0x20,0x20,0x20,0x20,0x20,0x53
0000ef 6174
0000f0 7472
0000f1 2020
0000f2 2d20      	.DB  0x74,0x61,0x72,0x74,0x20,0x20,0x20,0x2D
0000f3 203e
0000f4 2000
0000f5 2020
0000f6 6557      	.DB  0x3E,0x20,0x0,0x20,0x20,0x20,0x57,0x65
0000f7 636c
0000f8 6d6f
0000f9 2065
0000fa 2021      	.DB  0x6C,0x63,0x6F,0x6D,0x65,0x20,0x21,0x20
0000fb 2020
0000fc 0020
0000fd 6843
0000fe 6f6f      	.DB  0x20,0x20,0x20,0x0,0x43,0x68,0x6F,0x6F
0000ff 6573
000100 203a
000101 3120
000102 2020      	.DB  0x73,0x65,0x3A,0x20,0x20,0x31,0x20,0x20
000103 2032
000104 3320
000105 3100
000106 203a      	.DB  0x32,0x20,0x20,0x33,0x0,0x31,0x3A,0x20
000107 694c
000108 656e
000109 4620
00010a 6c6f      	.DB  0x4C,0x69,0x6E,0x65,0x20,0x46,0x6F,0x6C
00010b 6f6c
00010c 0077
00010d 3a32
00010e 2b20      	.DB  0x6C,0x6F,0x77,0x0,0x32,0x3A,0x20,0x2B
00010f 6f43
000110 6f6c
000111 0072
000112 3a33      	.DB  0x43,0x6F,0x6C,0x6F,0x72,0x0,0x33,0x3A
000113 2b20
000114 624f
000115 7473
000116 6361      	.DB  0x20,0x2B,0x4F,0x62,0x73,0x74,0x61,0x63
000117 656c
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1211): warning: .cseg .db misalignment - padding zero byte
000118 0000      	.DB  0x6C,0x65,0x0
                 _0x2000060:
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1213): warning: .cseg .db misalignment - padding zero byte
000119 0001      	.DB  0x1
                 _0x2000000:
00011a 4e2d
00011b 4e41
00011c 4900
00011d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
F:\New folder\- Code OK\Line-Following & Obstacle Detection\Debug\List\1.asm(1216): warning: .cseg .db misalignment - padding zero byte
00011e 0000      	.DB  0x0
                 _0x2040003:
00011f c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000120 0001      	.DW  0x01
000121 0002      	.DW  0x02
000122 009e      	.DW  __REG_BIT_VARS*2
                 
000123 0001      	.DW  0x01
000124 0008      	.DW  0x08
000125 00a0      	.DW  __REG_VARS*2
                 
000126 0001      	.DW  0x01
000127 0505      	.DW  _f
000128 00a2      	.DW  _0x3*2
                 
000129 0001      	.DW  0x01
00012a 0508      	.DW  _j
00012b 00a4      	.DW  _0x4*2
                 
00012c 0001      	.DW  0x01
00012d 0515      	.DW  __seed_G100
00012e 0232      	.DW  _0x2000060*2
                 
00012f 0002      	.DW  0x02
000130 0519      	.DW  __base_y_G102
000131 023e      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
000132 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000133 94f8      	CLI
000134 27ee      	CLR  R30
000135 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000136 e0f1      	LDI  R31,1
000137 bff5      	OUT  MCUCR,R31
000138 bfe5      	OUT  MCUCR,R30
000139 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
00013b e08d      	LDI  R24,(14-2)+1
00013c e0a2      	LDI  R26,2
00013d 27bb      	CLR  R27
                 __CLEAR_REG:
00013e 93ed      	ST   X+,R30
00013f 958a      	DEC  R24
000140 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000141 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000142 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000143 e0a0      	LDI  R26,LOW(__SRAM_START)
000144 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000145 93ed      	ST   X+,R30
000146 9701      	SBIW R24,1
000147 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000148 e4e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000149 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00014a 9185      	LPM  R24,Z+
00014b 9195      	LPM  R25,Z+
00014c 9700      	SBIW R24,0
00014d f061      	BREQ __GLOBAL_INI_END
00014e 91a5      	LPM  R26,Z+
00014f 91b5      	LPM  R27,Z+
000150 9005      	LPM  R0,Z+
000151 9015      	LPM  R1,Z+
000152 01bf      	MOVW R22,R30
000153 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000154 9005      	LPM  R0,Z+
000155 920d      	ST   X+,R0
000156 9701      	SBIW R24,1
000157 f7e1      	BRNE __GLOBAL_INI_LOOP
000158 01fb      	MOVW R30,R22
000159 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00015a efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00015b bfed      	OUT  SPL,R30
00015c e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00015d bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00015e e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00015f e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000160 940c 0514 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Project : Line Follower Robot with ability of Obstacle Detection
                 ;Version : Final
                 ;Date    : 05/30/2017
                 ;Author  : Mohammad Amir Eshraghi
                 ;Company : www.github.com/MAmirEshraghi/Line_Follower_Robot
                 ;Comments: Description and Album available on my GitHub.
                 ;
                 ;
                 ;Chip type               : ATmega64A
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 16.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 1024
                 ;*******************************************************/
                 ;
                 ;
                 ;#include <mega64a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;
                 ;//#define LEDG PORTF.1
                 ;//#define LEDY PORTF.2
                 ;//#define LEDR PORTF.3
                 ;
                 ;#define SWR  PINE.3
                 ;#define SWM  PINE.1
                 ;#define SWL  PINE.2
                 ;
                 ;#define on  1
                 ;#define off 0
                 ;
                 ;#define CW    0
                 ;#define CCW   1
                 ;
                 ;#define In1MotR PORTA.1
                 ;#define In2MotR PORTA.2
                 ;#define In1MotL PORTA.0
                 ;// #define In2MotL PORTF.7
                 ;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;#define SEN1   (PIND.0^i)
                 ;#define SEN2   (PIND.1^i)
                 ;#define SEN3   (PIND.2^i)
                 ;#define SEN4   (PIND.3^i)
                 ;#define SEN5   (PIND.4^i)
                 ;#define SEN6   (PIND.5^i)
                 ;#define SEN7   (PIND.6^i)
                 ;#define SEN8   (PIND.7^i)
                 ;
                 ;#define SEN9   (PING&0b00000001)    //PING.0
                 ;#define SEN9N  (PING&0b00000000)    //PING.0
                 ;
                 ;#define SEN10  (PING&0b00000010)    //PING.1
                 ;#define SEN10N (PING&0b00000000)    //PING.1
                 ;
                 ;#define SEN11  (PINC.0^i)
                 ;#define SEN12  (PINC.1^i)
                 ;#define SEN13  (PINC.2^i)
                 ;#define SEN14  (PINC.3^i)
                 ;#define SEN15  (PINC.4^i)
                 ;#define SEN16  (PINC.5^i)
                 ;#define SEN17  (PINC.6^i)
                 ;#define SEN18  (PINC.7^i)
                 ;
                 ;#define SEN19  (PING&0b00000100)    //PING.2
                 ;#define SEN19N (PING&0b00000000)    //PING.2
                 ;
                 ;#define SEN20  (PINA.7^i)
                 ;#define SEN21  (PINA.6^i)
                 ;#define SEN22  (PINA.3^i)
                 ;#define SEN23  (PINA.4^i)
                 ;#define SEN24  (PINA.5^i)
                 ;
                 ;#define VolomADC   read_adc(6)
                 ;
                 ;#define adcNumberL read_adc(3);
                 ;#define adcNumberR read_adc(4);
                 ;#define KeySen PORTE.0
                 ;#define N 2
                 ;
                 ;#define SWG (PINF&0b00100000)
                 ;
                 ;#define UsKey  PORTB.0
                 ;#define UsTrig PORTE.6
                 ;
                 ;//--------------------------------------------------
                 ;
                 ;bit i=0,f2;
                 ;int a[23];
                 ;int l;
                 ;bit DirectionR,DirectionL,b;
                 ;unsigned char SpeedR,SpeedL;
                 ;
                 ;unsigned char V;
                 ;int RS;
                 ;int LsenKeyON,RsenKeyON,LsenKeyOFF,RsenKeyOFF;
                 ;unsigned int ColorNumL,ColorNumR,ColorCalL,ColorCalR,c,d;
                 ;
                 ;char m[33];
                 ;char str[5];
                 ;char gg=0,f=2;
                 
                 	.DSEG
                 ;char p,e,j=100,j1;
                 ;unsigned int Time_us=0,cunter_ms=0,space_cm=0;
                 ;unsigned int cunter_us=0;
                 ;unsigned int cunter_ms,cunter_s;
                 ;
                 ;float u = 0.0;
                 ;char k;
                 ;
                 ;
                 ;//--------------------------------------------------
                 ;
                 ;
                 ;void LEDG (char a)
                 ; 0000 0078  {
                 
                 	.CSEG
                 _LEDG:
                 ; .FSTART _LEDG
                 ; 0000 0079        if ( a == 1)PORTF|=0b00000100;
000162 93aa      	ST   -Y,R26
                 ;	a -> Y+0
000163 81a8      	LD   R26,Y
000164 30a1      	CPI  R26,LOW(0x1)
000165 f421      	BRNE _0x5
000166 91e0 0062 	LDS  R30,98
000168 60e4      	ORI  R30,4
000169 c006      	RJMP _0xD4
                 ; 0000 007A   else if ( a == 0)PORTF&=0b11111011;
                 _0x5:
00016a 81e8      	LD   R30,Y
00016b 30e0      	CPI  R30,0
00016c f429      	BRNE _0x7
00016d 91e0 0062 	LDS  R30,98
00016f 7feb      	ANDI R30,0xFB
                 _0xD4:
000170 93e0 0062 	STS  98,R30
                 ; 0000 007B  }
                 _0x7:
000172 c010      	RJMP _0x20C0003
                 ; .FEND
                 ;void LEDY (char a)
                 ; 0000 007D  {
                 _LEDY:
                 ; .FSTART _LEDY
                 ; 0000 007E        if ( a == 1)PORTF|=0b00000010;
000173 93aa      	ST   -Y,R26
                 ;	a -> Y+0
000174 81a8      	LD   R26,Y
000175 30a1      	CPI  R26,LOW(0x1)
000176 f421      	BRNE _0x8
000177 91e0 0062 	LDS  R30,98
000179 60e2      	ORI  R30,2
00017a c006      	RJMP _0xD5
                 ; 0000 007F   else if ( a == 0)PORTF&=0b11111101;
                 _0x8:
00017b 81e8      	LD   R30,Y
00017c 30e0      	CPI  R30,0
00017d f429      	BRNE _0xA
00017e 91e0 0062 	LDS  R30,98
000180 7fed      	ANDI R30,0xFD
                 _0xD5:
000181 93e0 0062 	STS  98,R30
                 ; 0000 0080  }
                 _0xA:
                 _0x20C0003:
000183 9621      	ADIW R28,1
000184 9508      	RET
                 ; .FEND
                 ;void LEDR (char a)
                 ; 0000 0082  {
                 ; 0000 0083        if ( a == 1)PORTF|=0b00000001;
                 ;	a -> Y+0
                 ; 0000 0084   else if ( a == 0)PORTF&=0b11111110;
                 ; 0000 0085  }
                 ;
                 ;
                 ;
                 ;interrupt [EXT_INT5] void ext_int5_isr(void)
                 ; 0000 008A {
                 _ext_int5_isr:
                 ; .FSTART _ext_int5_isr
000185 920a      	ST   -Y,R0
000186 921a      	ST   -Y,R1
000187 92fa      	ST   -Y,R15
000188 936a      	ST   -Y,R22
000189 937a      	ST   -Y,R23
00018a 938a      	ST   -Y,R24
00018b 939a      	ST   -Y,R25
00018c 93aa      	ST   -Y,R26
00018d 93ba      	ST   -Y,R27
00018e 93ea      	ST   -Y,R30
00018f 93fa      	ST   -Y,R31
000190 b7ef      	IN   R30,SREG
000191 93ea      	ST   -Y,R30
                 ; 0000 008B   // Time_us = ((cunter_us*10)+ (cunter_ms*1000) );
                 ; 0000 008C 
                 ; 0000 008D       if( (PINE.5==1) )
000192 9b0d      	SBIS 0x1,5
000193 c010      	RJMP _0xE
                 ; 0000 008E     {
                 ; 0000 008F     cunter_us=0;
000194 940e 0738 	CALL SUBOPT_0x0
                 ; 0000 0090     cunter_ms=0;
                 ; 0000 0091     Time_us=0;
000196 e0e0      	LDI  R30,LOW(0)
000197 93e0 050a 	STS  _Time_us,R30
000199 93e0 050b 	STS  _Time_us+1,R30
                 ; 0000 0092 
                 ; 0000 0093     TCNT1H=0xFF60 >> 8;
00019b 940e 0742 	CALL SUBOPT_0x1
                 ; 0000 0094     TCNT1L=0xFF60 & 0xff;
                 ; 0000 0095 
                 ; 0000 0096     f=3;
00019d e0e3      	LDI  R30,LOW(3)
00019e 93e0 0505 	STS  _f,R30
                 ; 0000 0097 
                 ; 0000 0098     LEDY(1);
0001a0 e0a1      	LDI  R26,LOW(1)
0001a1 dfd1      	RCALL _LEDY
                 ; 0000 0099     LEDG(0);
0001a2 e0a0      	LDI  R26,LOW(0)
0001a3 c021      	RJMP _0xD7
                 ; 0000 009A         }
                 ; 0000 009B     else if( (PINE.5==0) )
                 _0xE:
0001a4 990d      	SBIC 0x1,5
0001a5 c020      	RJMP _0x10
                 ; 0000 009C     {
                 ; 0000 009D 
                 ; 0000 009E    // Time_us = ((cunter_us*10) );
                 ; 0000 009F     u = ( ( (340) * cunter_us ) / 2000 ) ;
0001a6 91e0 050e 	LDS  R30,_cunter_us
0001a8 91f0 050f 	LDS  R31,_cunter_us+1
0001aa e5a4      	LDI  R26,LOW(340)
0001ab e0b1      	LDI  R27,HIGH(340)
0001ac 940e 0898 	CALL __MULW12U
0001ae 01df      	MOVW R26,R30
0001af ede0      	LDI  R30,LOW(2000)
0001b0 e0f7      	LDI  R31,HIGH(2000)
0001b1 940e 08a0 	CALL __DIVW21U
0001b3 e1a0      	LDI  R26,LOW(_u)
0001b4 e0b5      	LDI  R27,HIGH(_u)
0001b5 2766      	CLR  R22
0001b6 2777      	CLR  R23
0001b7 940e 085d 	CALL __CDF1
0001b9 940e 08b3 	CALL __PUTDP1
                 ; 0000 00A0 
                 ; 0000 00A1     f=2;
0001bb e0e2      	LDI  R30,LOW(2)
0001bc 93e0 0505 	STS  _f,R30
                 ; 0000 00A2 
                 ; 0000 00A3      cunter_us=0;
0001be 940e 0738 	CALL SUBOPT_0x0
                 ; 0000 00A4      cunter_ms=0;
                 ; 0000 00A5      //Time_us=0;
                 ; 0000 00A6 
                 ; 0000 00A7      TCNT1H=0xFF60 >> 8;
0001c0 940e 0742 	CALL SUBOPT_0x1
                 ; 0000 00A8      TCNT1L=0xFF60 & 0xff;
                 ; 0000 00A9 
                 ; 0000 00AA     LEDY(0);
0001c2 e0a0      	LDI  R26,LOW(0)
0001c3 dfaf      	RCALL _LEDY
                 ; 0000 00AB     LEDG(1);
0001c4 e0a1      	LDI  R26,LOW(1)
                 _0xD7:
0001c5 df9c      	RCALL _LEDG
                 ; 0000 00AC 
                 ; 0000 00AD     }
                 ; 0000 00AE 
                 ; 0000 00AF //    Time_us =  (cunter_us) ;
                 ; 0000 00B0 //    //space_cm=0;
                 ; 0000 00B1 //  //  space_cm = (17 * Time_us) / 1000 ;
                 ; 0000 00B2 //    space_cm = ( ( (340) * Time_us) / 2000 ) ;
                 ; 0000 00B3 
                 ; 0000 00B4 //    cunter_us=0;
                 ; 0000 00B5 //    cunter_ms=0;
                 ; 0000 00B6 
                 ; 0000 00B7 }
                 _0x10:
0001c6 91e9      	LD   R30,Y+
0001c7 bfef      	OUT  SREG,R30
0001c8 91f9      	LD   R31,Y+
0001c9 91e9      	LD   R30,Y+
0001ca 91b9      	LD   R27,Y+
0001cb 91a9      	LD   R26,Y+
0001cc 9199      	LD   R25,Y+
0001cd 9189      	LD   R24,Y+
0001ce 9179      	LD   R23,Y+
0001cf 9169      	LD   R22,Y+
0001d0 90f9      	LD   R15,Y+
0001d1 9019      	LD   R1,Y+
0001d2 9009      	LD   R0,Y+
0001d3 9518      	RETI
                 ; .FEND
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 00B9 {
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
0001d4 93aa      	ST   -Y,R26
0001d5 93ba      	ST   -Y,R27
0001d6 93ea      	ST   -Y,R30
0001d7 93fa      	ST   -Y,R31
0001d8 b7ef      	IN   R30,SREG
0001d9 93ea      	ST   -Y,R30
                 ; 0000 00BA // Reinitialize Timer1 value
                 ; 0000 00BB TCNT1H=0xFF60 >> 8;
0001da 940e 0742 	CALL SUBOPT_0x1
                 ; 0000 00BC TCNT1L=0xFF60 & 0xff;
                 ; 0000 00BD 
                 ; 0000 00BE 
                 ; 0000 00BF  //TCNT0=0xF6;
                 ; 0000 00C0  cunter_us++;
0001dc e0ae      	LDI  R26,LOW(_cunter_us)
0001dd e0b5      	LDI  R27,HIGH(_cunter_us)
0001de 91ed      	LD   R30,X+
0001df 91fd      	LD   R31,X+
0001e0 9631      	ADIW R30,1
0001e1 93fe      	ST   -X,R31
0001e2 93ee      	ST   -X,R30
                 ; 0000 00C1  //cunter_ms++;
                 ; 0000 00C2 
                 ; 0000 00C3 // delay_us(500);
                 ; 0000 00C4  if ( cunter_us == 500 )
0001e3 91a0 050e 	LDS  R26,_cunter_us
0001e5 91b0 050f 	LDS  R27,_cunter_us+1
0001e7 3fa4      	CPI  R26,LOW(0x1F4)
0001e8 e0e1      	LDI  R30,HIGH(0x1F4)
0001e9 07be      	CPC  R27,R30
0001ea f461      	BRNE _0x11
                 ; 0000 00C5  {
                 ; 0000 00C6   cunter_us=0;
0001eb e0e0      	LDI  R30,LOW(0)
0001ec 93e0 050e 	STS  _cunter_us,R30
0001ee 93e0 050f 	STS  _cunter_us+1,R30
                 ; 0000 00C7   cunter_ms++;
0001f0 e0ac      	LDI  R26,LOW(_cunter_ms)
0001f1 e0b5      	LDI  R27,HIGH(_cunter_ms)
0001f2 91ed      	LD   R30,X+
0001f3 91fd      	LD   R31,X+
0001f4 9631      	ADIW R30,1
0001f5 93fe      	ST   -X,R31
0001f6 93ee      	ST   -X,R30
                 ; 0000 00C8  }
                 ; 0000 00C9  if ( cunter_ms == 50 )
                 _0x11:
0001f7 91a0 050c 	LDS  R26,_cunter_ms
0001f9 91b0 050d 	LDS  R27,_cunter_ms+1
0001fb 97d2      	SBIW R26,50
0001fc f429      	BRNE _0x12
                 ; 0000 00CA  {
                 ; 0000 00CB  cunter_ms=0;
0001fd e0e0      	LDI  R30,LOW(0)
0001fe 93e0 050c 	STS  _cunter_ms,R30
000200 93e0 050d 	STS  _cunter_ms+1,R30
                 ; 0000 00CC  }
                 ; 0000 00CD // else LEDR(0);
                 ; 0000 00CE // if ( cunter_s == 100 )
                 ; 0000 00CF // {
                 ; 0000 00D0 //  cunter_s=0;
                 ; 0000 00D1 // }
                 ; 0000 00D2 
                 ; 0000 00D3  }
                 _0x12:
000202 91e9      	LD   R30,Y+
000203 bfef      	OUT  SREG,R30
000204 91f9      	LD   R31,Y+
000205 91e9      	LD   R30,Y+
000206 91b9      	LD   R27,Y+
000207 91a9      	LD   R26,Y+
000208 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 00D9  {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000209 93ea      	ST   -Y,R30
00020a b7ef      	IN   R30,SREG
00020b 93ea      	ST   -Y,R30
                 ; 0000 00DA   static bit K0=0;
                 ; 0000 00DB 
                 ; 0000 00DC   if ( K0 )
00020c fe25      	SBRS R2,5
00020d c00f      	RJMP _0x13
                 ; 0000 00DD   {
                 ; 0000 00DE    TCNT0 = 255 - SpeedR;
00020e efef      	LDI  R30,LOW(255)
00020f 19e7      	SUB  R30,R7
000210 bfe2      	OUT  0x32,R30
                 ; 0000 00DF    K0=0;
000211 94e8      	CLT
000212 f825      	BLD  R2,5
                 ; 0000 00E0 
                 ; 0000 00E1    if      ( DirectionR ==  CW )
000213 fc22      	SBRC R2,2
000214 c003      	RJMP _0x14
                 ; 0000 00E2    {
                 ; 0000 00E3     In1MotR = 1;
000215 9ad9      	SBI  0x1B,1
                 ; 0000 00E4     In2MotR = 0;
000216 98da      	CBI  0x1B,2
                 ; 0000 00E5    }
                 ; 0000 00E6    else if ( DirectionR == CCW )
000217 c004      	RJMP _0x19
                 _0x14:
000218 fe22      	SBRS R2,2
000219 c002      	RJMP _0x1A
                 ; 0000 00E7    {
                 ; 0000 00E8     In1MotR = 0;
00021a 98d9      	CBI  0x1B,1
                 ; 0000 00E9     In2MotR = 1;
00021b 9ada      	SBI  0x1B,2
                 ; 0000 00EA    }
                 ; 0000 00EB 
                 ; 0000 00EC   }
                 _0x1A:
                 _0x19:
                 ; 0000 00ED   else if ( !K0 )
00021c c007      	RJMP _0x1F
                 _0x13:
00021d fc25      	SBRC R2,5
00021e c005      	RJMP _0x20
                 ; 0000 00EE   {
                 ; 0000 00EF    TCNT0=SpeedR;
00021f be72      	OUT  0x32,R7
                 ; 0000 00F0    K0=1;
000220 9468      	SET
000221 f825      	BLD  R2,5
                 ; 0000 00F1 
                 ; 0000 00F2    In1MotR = 0;
000222 98d9      	CBI  0x1B,1
                 ; 0000 00F3    In2MotR = 0;
000223 98da      	CBI  0x1B,2
                 ; 0000 00F4   }
                 ; 0000 00F5 
                 ; 0000 00F6  }
                 _0x20:
                 _0x1F:
000224 c025      	RJMP _0xD9
                 ; .FEND
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 00F8  {
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
000225 93ea      	ST   -Y,R30
000226 b7ef      	IN   R30,SREG
000227 93ea      	ST   -Y,R30
                 ; 0000 00F9   static bit KP2=0;
                 ; 0000 00FA   if(KP2)
000228 fe26      	SBRS R2,6
000229 c015      	RJMP _0x25
                 ; 0000 00FB   {
                 ; 0000 00FC     TCNT2=255-SpeedL;
00022a efef      	LDI  R30,LOW(255)
00022b 19e6      	SUB  R30,R6
00022c bde4      	OUT  0x24,R30
                 ; 0000 00FD     KP2=0;
00022d 94e8      	CLT
00022e f826      	BLD  R2,6
                 ; 0000 00FE     if(DirectionL==CW)
00022f fc23      	SBRC R2,3
000230 c005      	RJMP _0x26
                 ; 0000 00FF     {
                 ; 0000 0100         In1MotL=0;
000231 98d8      	CBI  0x1B,0
                 ; 0000 0101         //In2MotL=1;
                 ; 0000 0102         PORTF|=0b10000000;
000232 91e0 0062 	LDS  R30,98
000234 68e0      	ORI  R30,0x80
000235 c006      	RJMP _0xD8
                 ; 0000 0103     }
                 ; 0000 0104     else if(DirectionL==CCW)
                 _0x26:
000236 fe23      	SBRS R2,3
000237 c006      	RJMP _0x2A
                 ; 0000 0105     {
                 ; 0000 0106         In1MotL=1;
000238 9ad8      	SBI  0x1B,0
                 ; 0000 0107         //In2MotL=0;
                 ; 0000 0108         PORTF&=0b01111111;
000239 91e0 0062 	LDS  R30,98
00023b 77ef      	ANDI R30,0x7F
                 _0xD8:
00023c 93e0 0062 	STS  98,R30
                 ; 0000 0109     }
                 ; 0000 010A   }
                 _0x2A:
                 ; 0000 010B   else if(!KP2)
00023e c00b      	RJMP _0x2D
                 _0x25:
00023f fc26      	SBRC R2,6
000240 c009      	RJMP _0x2E
                 ; 0000 010C   {
                 ; 0000 010D     TCNT2=SpeedL;
000241 bc64      	OUT  0x24,R6
                 ; 0000 010E     KP2=1;
000242 9468      	SET
000243 f826      	BLD  R2,6
                 ; 0000 010F 
                 ; 0000 0110     In1MotL=0;
000244 98d8      	CBI  0x1B,0
                 ; 0000 0111     //In2MotL=0;
                 ; 0000 0112     PORTF&=0b01111111;
000245 91e0 0062 	LDS  R30,98
000247 77ef      	ANDI R30,0x7F
000248 93e0 0062 	STS  98,R30
                 ; 0000 0113   }
                 ; 0000 0114  }
                 _0x2E:
                 _0x2D:
                 _0xD9:
00024a 91e9      	LD   R30,Y+
00024b bfef      	OUT  SREG,R30
00024c 91e9      	LD   R30,Y+
00024d 9518      	RETI
                 ; .FEND
                 ;
                 ;// Voltage Reference: AVCC pin
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (1<<ADLAR))
                 ;
                 ;// Read the 8 most significant bits
                 ;// of the AD conversion result
                 ;unsigned char read_adc(unsigned char adc_input)
                 ; 0000 011C {
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 011D ADMUX=adc_input | ADC_VREF_TYPE;
00024e 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00024f 81e8      	LD   R30,Y
000250 66e0      	ORI  R30,LOW(0x60)
000251 b9e7      	OUT  0x7,R30
                 ; 0000 011E // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 011F delay_us(10);
                +
000252 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
000253 958a     +DEC R24
000254 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
                 ; 0000 0120 // Start the AD conversion
                 ; 0000 0121 ADCSRA|=(1<<ADSC);
000255 9a36      	SBI  0x6,6
                 ; 0000 0122 // Wait for the AD conversion to complete
                 ; 0000 0123 while ((ADCSRA & (1<<ADIF))==0);
                 _0x31:
000256 9b34      	SBIS 0x6,4
000257 cffe      	RJMP _0x31
                 ; 0000 0124 ADCSRA|=(1<<ADIF);
000258 9a34      	SBI  0x6,4
                 ; 0000 0125 return ADCH;
000259 b1e5      	IN   R30,0x5
00025a 940c 0736 	JMP  _0x20C0001
                 ; 0000 0126 }
                 ; .FEND
                 ;
                 ;
                 ;void Move(char DL,char DR,unsigned char SL,unsigned char SR)
                 ; 0000 012A {
                 _Move:
                 ; .FSTART _Move
                 ; 0000 012B     DirectionL=DL;
00025c 93aa      	ST   -Y,R26
                 ;	DL -> Y+3
                 ;	DR -> Y+2
                 ;	SL -> Y+1
                 ;	SR -> Y+0
00025d 81eb      	LDD  R30,Y+3
00025e 940e 08b8 	CALL __BSTB1
000260 f823      	BLD  R2,3
                 ; 0000 012C     DirectionR=DR;
000261 81ea      	LDD  R30,Y+2
000262 940e 08b8 	CALL __BSTB1
000264 f822      	BLD  R2,2
                 ; 0000 012D     SpeedL=SL;
000265 8069      	LDD  R6,Y+1
                 ; 0000 012E     SpeedR=SR;
000266 8078      	LDD  R7,Y+0
                 ; 0000 012F }
000267 9624      	ADIW R28,4
000268 9508      	RET
                 ; .FEND
                 ;
                 ;void revolve()
                 ; 0000 0132 {
                 ; 0000 0133  while (!SEN1)    Move(CCW,CW,100,150);
                 ; 0000 0135 Move(0,0,200,200);
                 ; 0000 0136   delay_ms(40);
                 ; 0000 0137 
                 ; 0000 0138  while ( !SEN12 )
                 ; 0000 0139  {
                 ; 0000 013A 
                 ; 0000 013B   for (e=0;e<150;e++)
                 ; 0000 013C    {
                 ; 0000 013D 
                 ; 0000 013E     Move(CW,CW,(100+e),(70));
                 ; 0000 013F     delay_ms(10);
                 ; 0000 0140     if           ( (SEN12) || (SEN13) )
                 ; 0000 0141     {
                 ; 0000 0142      break;
                 ; 0000 0143     }
                 ; 0000 0144     else if      ( (!SEN12) || (!SEN13) )
                 ; 0000 0145     {
                 ; 0000 0146      if ( e == 149 )
                 ; 0000 0147      {
                 ; 0000 0148       e=0;
                 ; 0000 0149      }
                 ; 0000 014A     }
                 ; 0000 014B 
                 ; 0000 014C    }
                 ; 0000 014D  break;
                 ; 0000 014E  }
                 ; 0000 014F 
                 ; 0000 0150 }
                 ;
                 ;void space()
                 ; 0000 0153 {
                 ; 0000 0154 
                 ; 0000 0155 // if      ( (p==0) && ( 20 < k < 30 ) )
                 ; 0000 0156 // {
                 ; 0000 0157 // p=1;
                 ; 0000 0158 // LEDR(1);
                 ; 0000 0159 // }
                 ; 0000 015A // else if ( (p==1) && (( k > 15) && ( k < 21 )) )
                 ; 0000 015B //
                 ; 0000 015C // {
                 ; 0000 015D // p=2;
                 ; 0000 015E // //LEDR(1);
                 ; 0000 015F // }
                 ; 0000 0160 //
                 ; 0000 0161 
                 ; 0000 0162        UsTrig=1;
                 ; 0000 0163        delay_us(20);
                 ; 0000 0164        UsTrig=0;
                 ; 0000 0165        delay_us(20);
                 ; 0000 0166 
                 ; 0000 0167        k=u;
                 ; 0000 0168 
                 ; 0000 0169   if (  (( k > 5) && ( k < 16 )) )
                 ; 0000 016A  {
                 ; 0000 016B   LEDR(1);
                 ; 0000 016C   revolve();
                 ; 0000 016D  }
                 ; 0000 016E  else {LEDR(0);}
                 ; 0000 016F }
                 ;
                 ;void LineFollower ()
                 ; 0000 0172  {
                 _LineFollower:
                 ; .FSTART _LineFollower
                 ; 0000 0173      i=0;
000269 94e8      	CLT
00026a f820      	BLD  R2,0
                 ; 0000 0174 //  //ReadSen();
                 ; 0000 0175 //
                 ; 0000 0176 //  if ( SEN7 && SEN8 &&  SEN11 && SEN12 && SEN13 && SEN14 && SEN15 && SEN16 && SEN17 && SEN18 )
                 ; 0000 0177 //  {
                 ; 0000 0178 //   i=!i;
                 ; 0000 0179 //  }
                 ; 0000 017A //       if ( i==1 ) LEDR(1);
                 ; 0000 017B //  else if ( i==0 ) LEDR(0);
                 ; 0000 017C  /*
                 ; 0000 017D  if (p==1){
                 ; 0000 017E        if  ( SEN12 && SEN13 )  {Move(CW,CW,V,V);space();}
                 ; 0000 017F   else if  ( SEN12 )           {Move(CW,CW,20+V,V);space();}
                 ; 0000 0180   else if  ( SEN13 )           {Move(CW,CW,V,20+V);space();}
                 ; 0000 0181   }
                 ; 0000 0182   */
                 ; 0000 0183    //else if (p==0){
                 ; 0000 0184        if  ( SEN12 && SEN13 )  {Move(CW,CW,V,V);lcd_gotoxy(0,0);lcd_putsf("--");}
00026b 940e 0747 	CALL SUBOPT_0x2
00026d f019      	BREQ _0x4E
00026e 940e 074f 	CALL SUBOPT_0x3
000270 f409      	BRNE _0x4F
                 _0x4E:
000271 c00a      	RJMP _0x4D
                 _0x4F:
000272 940e 0757 	CALL SUBOPT_0x4
000274 929a      	ST   -Y,R9
000275 940e 075b 	CALL SUBOPT_0x5
                +
000277 eaa6     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000278 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
000279 940e 06f5 	CALL _lcd_putsf
                 ; 0000 0185   else if  ( SEN12 )           {Move(CW,CW,20+V,V);lcd_gotoxy(0,0);lcd_putsf("12");}
00027b c1cd      	RJMP _0x50
                 _0x4D:
00027c 940e 0747 	CALL SUBOPT_0x2
00027e f061      	BREQ _0x51
00027f 940e 0757 	CALL SUBOPT_0x4
000281 2de9      	MOV  R30,R9
000282 5eec      	SUBI R30,-LOW(20)
000283 93ea      	ST   -Y,R30
000284 940e 075b 	CALL SUBOPT_0x5
                +
000286 eaa9     +LDI R26 , LOW ( 2 * _0x0 + ( 3 ) )
000287 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW2FN _0x0,3
000288 940e 06f5 	CALL _lcd_putsf
                 ; 0000 0186   else if  ( SEN13 )           {Move(CW,CW,V,20+V);lcd_gotoxy(0,0);lcd_putsf("13");}
00028a c1be      	RJMP _0x52
                 _0x51:
00028b 940e 074f 	CALL SUBOPT_0x3
00028d f061      	BREQ _0x53
00028e 940e 0757 	CALL SUBOPT_0x4
000290 929a      	ST   -Y,R9
000291 2da9      	MOV  R26,R9
000292 5eac      	SUBI R26,-LOW(20)
000293 940e 0763 	CALL SUBOPT_0x6
                +
000295 eaac     +LDI R26 , LOW ( 2 * _0x0 + ( 6 ) )
000296 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW2FN _0x0,6
000297 940e 06f5 	CALL _lcd_putsf
                 ; 0000 0187   //}
                 ; 0000 0188   else if  ( SEN11 )           {Move(CW,CW,40+V,V);lcd_gotoxy(0,0);lcd_putsf("11");}
000299 c1af      	RJMP _0x54
                 _0x53:
00029a e0a0      	LDI  R26,0
00029b 9998      	SBIC 0x13,0
00029c e0a1      	LDI  R26,1
00029d 940e 076a 	CALL SUBOPT_0x7
00029f f061      	BREQ _0x55
0002a0 940e 0757 	CALL SUBOPT_0x4
0002a2 2de9      	MOV  R30,R9
0002a3 5de8      	SUBI R30,-LOW(40)
0002a4 93ea      	ST   -Y,R30
0002a5 940e 075b 	CALL SUBOPT_0x5
                +
0002a7 eaaf     +LDI R26 , LOW ( 2 * _0x0 + ( 9 ) )
0002a8 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 9 ) )
                 	__POINTW2FN _0x0,9
0002a9 940e 06f5 	CALL _lcd_putsf
                 ; 0000 0189   else if  ( SEN14 )           {Move(CW,CW,V,40+V);lcd_gotoxy(0,0);lcd_putsf("14");}
0002ab c19d      	RJMP _0x56
                 _0x55:
0002ac e0a0      	LDI  R26,0
0002ad 999b      	SBIC 0x13,3
0002ae e0a1      	LDI  R26,1
0002af 940e 076a 	CALL SUBOPT_0x7
0002b1 f061      	BREQ _0x57
0002b2 940e 0757 	CALL SUBOPT_0x4
0002b4 929a      	ST   -Y,R9
0002b5 2da9      	MOV  R26,R9
0002b6 5da8      	SUBI R26,-LOW(40)
0002b7 940e 0763 	CALL SUBOPT_0x6
                +
0002b9 eba2     +LDI R26 , LOW ( 2 * _0x0 + ( 12 ) )
0002ba e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW2FN _0x0,12
0002bb 940e 06f5 	CALL _lcd_putsf
                 ; 0000 018A 
                 ; 0000 018B   //        ( SEN10 )              Move(CW,CW,60+V,V);
                 ; 0000 018C   else if  ( i == 0 ) if ( SEN10  ){{Move(CW,CW,60+V,V);lcd_gotoxy(0,0);lcd_putsf("10");}}
0002bd c18b      	RJMP _0x58
                 _0x57:
0002be fc20      	SBRC R2,0
0002bf c189      	RJMP _0x59
0002c0 91e0 0063 	LDS  R30,99
0002c2 70e2      	ANDI R30,LOW(0x2)
0002c3 f061      	BREQ _0x5A
0002c4 940e 0757 	CALL SUBOPT_0x4
0002c6 2de9      	MOV  R30,R9
0002c7 5ce4      	SUBI R30,-LOW(60)
0002c8 93ea      	ST   -Y,R30
0002c9 940e 075b 	CALL SUBOPT_0x5
                +
0002cb eba5     +LDI R26 , LOW ( 2 * _0x0 + ( 15 ) )
0002cc e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 15 ) )
                 	__POINTW2FN _0x0,15
0002cd 940e 06f5 	CALL _lcd_putsf
                 ; 0000 018D   else if  ( i == 1 ) if ( SEN10N ) {Move(CW,CW,60+V,V);}
0002cf c179      	RJMP _0x5B
                 _0x5A:
0002d0 fe20      	SBRS R2,0
0002d1 c177      	RJMP _0x5C
0002d2 91e0 0063 	LDS  R30,99
0002d4 70e0      	ANDI R30,LOW(0x0)
0002d5 f041      	BREQ _0x5D
0002d6 940e 0757 	CALL SUBOPT_0x4
0002d8 2de9      	MOV  R30,R9
0002d9 5ce4      	SUBI R30,-LOW(60)
0002da 93ea      	ST   -Y,R30
0002db 2da9      	MOV  R26,R9
0002dc df7f      	RCALL _Move
                 ; 0000 018E   else if  ( SEN15 )                {Move(CW,CW,V,60+V);lcd_gotoxy(0,0);lcd_putsf("15");}
0002dd c16b      	RJMP _0x5E
                 _0x5D:
0002de e0a0      	LDI  R26,0
0002df 999c      	SBIC 0x13,4
0002e0 e0a1      	LDI  R26,1
0002e1 940e 076a 	CALL SUBOPT_0x7
0002e3 f061      	BREQ _0x5F
0002e4 940e 0757 	CALL SUBOPT_0x4
0002e6 929a      	ST   -Y,R9
0002e7 2da9      	MOV  R26,R9
0002e8 5ca4      	SUBI R26,-LOW(60)
0002e9 940e 0763 	CALL SUBOPT_0x6
                +
0002eb eba8     +LDI R26 , LOW ( 2 * _0x0 + ( 18 ) )
0002ec e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW2FN _0x0,18
0002ed 940e 06f5 	CALL _lcd_putsf
                 ; 0000 018F 
                 ; 0000 0190 
                 ; 0000 0191   //         ( SEN9 )               Move(CW,CW,80+V,V);
                 ; 0000 0192   else if  ( i == 0 ){if ( SEN9  )  {Move(CW,CW,80+V,V);lcd_gotoxy(0,0);lcd_putsf("09");}}
0002ef c159      	RJMP _0x60
                 _0x5F:
0002f0 fc20      	SBRC R2,0
0002f1 c010      	RJMP _0x61
0002f2 91e0 0063 	LDS  R30,99
0002f4 70e1      	ANDI R30,LOW(0x1)
0002f5 f059      	BREQ _0x62
0002f6 940e 0757 	CALL SUBOPT_0x4
0002f8 2de9      	MOV  R30,R9
0002f9 5be0      	SUBI R30,-LOW(80)
0002fa 93ea      	ST   -Y,R30
0002fb 940e 075b 	CALL SUBOPT_0x5
                +
0002fd ebab     +LDI R26 , LOW ( 2 * _0x0 + ( 21 ) )
0002fe e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 21 ) )
                 	__POINTW2FN _0x0,21
0002ff 940e 06f5 	CALL _lcd_putsf
                 _0x62:
                 ; 0000 0193   else if  ( i == 1 ){if ( SEN9N )  {Move(CW,CW,80+V,V);}}
000301 c147      	RJMP _0x63
                 _0x61:
000302 fe20      	SBRS R2,0
000303 c00c      	RJMP _0x64
000304 91e0 0063 	LDS  R30,99
000306 70e0      	ANDI R30,LOW(0x0)
000307 f039      	BREQ _0x65
000308 940e 0757 	CALL SUBOPT_0x4
00030a 2de9      	MOV  R30,R9
00030b 5be0      	SUBI R30,-LOW(80)
00030c 93ea      	ST   -Y,R30
00030d 2da9      	MOV  R26,R9
00030e df4d      	RCALL _Move
                 _0x65:
                 ; 0000 0194   else if  ( SEN16 )                {Move(CW,CW,V,80+V);lcd_gotoxy(0,0);lcd_putsf("16");}
00030f c139      	RJMP _0x66
                 _0x64:
000310 e0a0      	LDI  R26,0
000311 999d      	SBIC 0x13,5
000312 e0a1      	LDI  R26,1
000313 940e 076a 	CALL SUBOPT_0x7
000315 f061      	BREQ _0x67
000316 940e 0757 	CALL SUBOPT_0x4
000318 929a      	ST   -Y,R9
000319 2da9      	MOV  R26,R9
00031a 5ba0      	SUBI R26,-LOW(80)
00031b 940e 0763 	CALL SUBOPT_0x6
                +
00031d ebae     +LDI R26 , LOW ( 2 * _0x0 + ( 24 ) )
00031e e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 24 ) )
                 	__POINTW2FN _0x0,24
00031f 940e 06f5 	CALL _lcd_putsf
                 ; 0000 0195 
                 ; 0000 0196   else if  ( SEN8 )            {Move(CW,CW,100+V,V);lcd_gotoxy(0,0);lcd_putsf("08");}
000321 c127      	RJMP _0x68
                 _0x67:
000322 e0a0      	LDI  R26,0
000323 9987      	SBIC 0x10,7
000324 e0a1      	LDI  R26,1
000325 940e 076a 	CALL SUBOPT_0x7
000327 f061      	BREQ _0x69
000328 940e 0757 	CALL SUBOPT_0x4
00032a 2de9      	MOV  R30,R9
00032b 59ec      	SUBI R30,-LOW(100)
00032c 93ea      	ST   -Y,R30
00032d 940e 075b 	CALL SUBOPT_0x5
                +
00032f eca1     +LDI R26 , LOW ( 2 * _0x0 + ( 27 ) )
000330 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 27 ) )
                 	__POINTW2FN _0x0,27
000331 940e 06f5 	CALL _lcd_putsf
                 ; 0000 0197   else if  ( SEN17 )           {Move(CW,CW,V,100+V);lcd_gotoxy(0,0);lcd_putsf("17");}
000333 c115      	RJMP _0x6A
                 _0x69:
000334 e0a0      	LDI  R26,0
000335 999e      	SBIC 0x13,6
000336 e0a1      	LDI  R26,1
000337 940e 076a 	CALL SUBOPT_0x7
000339 f061      	BREQ _0x6B
00033a 940e 0757 	CALL SUBOPT_0x4
00033c 929a      	ST   -Y,R9
00033d 2da9      	MOV  R26,R9
00033e 59ac      	SUBI R26,-LOW(100)
00033f 940e 0763 	CALL SUBOPT_0x6
                +
000341 eca4     +LDI R26 , LOW ( 2 * _0x0 + ( 30 ) )
000342 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 30 ) )
                 	__POINTW2FN _0x0,30
000343 940e 06f5 	CALL _lcd_putsf
                 ; 0000 0198 
                 ; 0000 0199   else if  ( SEN7 )            {Move(CW,CW,150,0);lcd_gotoxy(0,0);lcd_putsf("07");}
000345 c103      	RJMP _0x6C
                 _0x6B:
000346 e0a0      	LDI  R26,0
000347 9986      	SBIC 0x10,6
000348 e0a1      	LDI  R26,1
000349 940e 076a 	CALL SUBOPT_0x7
00034b f061      	BREQ _0x6D
00034c 940e 0757 	CALL SUBOPT_0x4
00034e e9e6      	LDI  R30,LOW(150)
00034f 93ea      	ST   -Y,R30
000350 e0a0      	LDI  R26,LOW(0)
000351 940e 0763 	CALL SUBOPT_0x6
                +
000353 eca7     +LDI R26 , LOW ( 2 * _0x0 + ( 33 ) )
000354 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW2FN _0x0,33
000355 940e 06f5 	CALL _lcd_putsf
                 ; 0000 019A   else if  ( SEN18 )           {Move(CW,CW,0,150);lcd_gotoxy(0,0);lcd_putsf("18");}
000357 c0f1      	RJMP _0x6E
                 _0x6D:
000358 e0a0      	LDI  R26,0
000359 999f      	SBIC 0x13,7
00035a e0a1      	LDI  R26,1
00035b 940e 076a 	CALL SUBOPT_0x7
00035d f061      	BREQ _0x6F
00035e 940e 0757 	CALL SUBOPT_0x4
000360 e0e0      	LDI  R30,LOW(0)
000361 93ea      	ST   -Y,R30
000362 e9a6      	LDI  R26,LOW(150)
000363 940e 0763 	CALL SUBOPT_0x6
                +
000365 ecaa     +LDI R26 , LOW ( 2 * _0x0 + ( 36 ) )
000366 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 36 ) )
                 	__POINTW2FN _0x0,36
000367 940e 06f5 	CALL _lcd_putsf
                 ; 0000 019B 
                 ; 0000 019C 
                 ; 0000 019D   else if  ( SEN6 )                 {lcd_gotoxy(0,0);lcd_putsf("06");Move(CW,CW,250,0);}
000369 c0df      	RJMP _0x70
                 _0x6F:
00036a e0a0      	LDI  R26,0
00036b 9985      	SBIC 0x10,5
00036c e0a1      	LDI  R26,1
00036d 940e 076a 	CALL SUBOPT_0x7
00036f f069      	BREQ _0x71
000370 940e 076f 	CALL SUBOPT_0x8
                +
000372 ecad     +LDI R26 , LOW ( 2 * _0x0 + ( 39 ) )
000373 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW2FN _0x0,39
000374 940e 06f5 	CALL _lcd_putsf
000376 940e 0757 	CALL SUBOPT_0x4
000378 efea      	LDI  R30,LOW(250)
000379 93ea      	ST   -Y,R30
00037a e0a0      	LDI  R26,LOW(0)
00037b dee0      	RCALL _Move
                 ; 0000 019E   //        ( SEN19 )              Move(CW,CW,0,250);
                 ; 0000 019F   else if  ( i == 0 ) {if ( SEN19  ){lcd_gotoxy(0,0);lcd_putsf("19");Move(CW,CW,0,250);}}
00037c c0cc      	RJMP _0x72
                 _0x71:
00037d fc20      	SBRC R2,0
00037e c011      	RJMP _0x73
00037f 91e0 0063 	LDS  R30,99
000381 70e4      	ANDI R30,LOW(0x4)
000382 f061      	BREQ _0x74
000383 940e 076f 	CALL SUBOPT_0x8
                +
000385 eda0     +LDI R26 , LOW ( 2 * _0x0 + ( 42 ) )
000386 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 42 ) )
                 	__POINTW2FN _0x0,42
000387 940e 06f5 	CALL _lcd_putsf
000389 940e 0757 	CALL SUBOPT_0x4
00038b e0e0      	LDI  R30,LOW(0)
00038c 93ea      	ST   -Y,R30
00038d efaa      	LDI  R26,LOW(250)
00038e decd      	RCALL _Move
                 _0x74:
                 ; 0000 01A0   else if  ( i == 1 ) {if ( SEN19N ){Move(CW,CW,0,250);}}
00038f c0b9      	RJMP _0x75
                 _0x73:
000390 fe20      	SBRS R2,0
000391 c00b      	RJMP _0x76
000392 91e0 0063 	LDS  R30,99
000394 70e0      	ANDI R30,LOW(0x0)
000395 f031      	BREQ _0x77
000396 940e 0757 	CALL SUBOPT_0x4
000398 e0e0      	LDI  R30,LOW(0)
000399 93ea      	ST   -Y,R30
00039a efaa      	LDI  R26,LOW(250)
00039b dec0      	RCALL _Move
                 _0x77:
                 ; 0000 01A1 
                 ; 0000 01A2   else if  ( SEN5 )            {Move(CW,CCW,200,100);lcd_gotoxy(0,0);lcd_putsf("05");}
00039c c0ac      	RJMP _0x78
                 _0x76:
00039d e0a0      	LDI  R26,0
00039e 9984      	SBIC 0x10,4
00039f e0a1      	LDI  R26,1
0003a0 940e 076a 	CALL SUBOPT_0x7
0003a2 f061      	BREQ _0x79
0003a3 940e 0774 	CALL SUBOPT_0x9
0003a5 ece8      	LDI  R30,LOW(200)
0003a6 93ea      	ST   -Y,R30
0003a7 e6a4      	LDI  R26,LOW(100)
0003a8 940e 0763 	CALL SUBOPT_0x6
                +
0003aa eda3     +LDI R26 , LOW ( 2 * _0x0 + ( 45 ) )
0003ab e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 45 ) )
                 	__POINTW2FN _0x0,45
0003ac 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01A3   else if  ( SEN20 )           {Move(CCW,CW,190,200);lcd_gotoxy(0,0);lcd_putsf("20");}
0003ae c09a      	RJMP _0x7A
                 _0x79:
0003af e0a0      	LDI  R26,0
0003b0 99cf      	SBIC 0x19,7
0003b1 e0a1      	LDI  R26,1
0003b2 940e 076a 	CALL SUBOPT_0x7
0003b4 f051      	BREQ _0x7B
0003b5 940e 0779 	CALL SUBOPT_0xA
0003b7 eca8      	LDI  R26,LOW(200)
0003b8 940e 0763 	CALL SUBOPT_0x6
                +
0003ba eda6     +LDI R26 , LOW ( 2 * _0x0 + ( 48 ) )
0003bb e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 48 ) )
                 	__POINTW2FN _0x0,48
0003bc 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01A4 
                 ; 0000 01A5   else if  ( SEN4 )            {Move(CW,CCW,190,190);lcd_gotoxy(0,0);lcd_putsf("04");}
0003be c08a      	RJMP _0x7C
                 _0x7B:
0003bf e0a0      	LDI  R26,0
0003c0 9983      	SBIC 0x10,3
0003c1 e0a1      	LDI  R26,1
0003c2 940e 076a 	CALL SUBOPT_0x7
0003c4 f061      	BREQ _0x7D
0003c5 940e 0774 	CALL SUBOPT_0x9
0003c7 ebee      	LDI  R30,LOW(190)
0003c8 93ea      	ST   -Y,R30
0003c9 ebae      	LDI  R26,LOW(190)
0003ca 940e 0763 	CALL SUBOPT_0x6
                +
0003cc eda9     +LDI R26 , LOW ( 2 * _0x0 + ( 51 ) )
0003cd e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 51 ) )
                 	__POINTW2FN _0x0,51
0003ce 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01A6   else if  ( SEN21 )           {Move(CCW,CW,190,190);lcd_gotoxy(0,0);lcd_putsf("21");}
0003d0 c078      	RJMP _0x7E
                 _0x7D:
0003d1 e0a0      	LDI  R26,0
0003d2 99ce      	SBIC 0x19,6
0003d3 e0a1      	LDI  R26,1
0003d4 940e 076a 	CALL SUBOPT_0x7
0003d6 f051      	BREQ _0x7F
0003d7 940e 0779 	CALL SUBOPT_0xA
0003d9 ebae      	LDI  R26,LOW(190)
0003da 940e 0763 	CALL SUBOPT_0x6
                +
0003dc edac     +LDI R26 , LOW ( 2 * _0x0 + ( 54 ) )
0003dd e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 54 ) )
                 	__POINTW2FN _0x0,54
0003de 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01A7 
                 ; 0000 01A8 
                 ; 0000 01A9   else if  ( SEN3 )            {Move(CW,CCW,190,255);lcd_gotoxy(0,0);lcd_putsf("03");}
0003e0 c068      	RJMP _0x80
                 _0x7F:
0003e1 e0a0      	LDI  R26,0
0003e2 9982      	SBIC 0x10,2
0003e3 e0a1      	LDI  R26,1
0003e4 940e 076a 	CALL SUBOPT_0x7
0003e6 f051      	BREQ _0x81
0003e7 940e 0774 	CALL SUBOPT_0x9
0003e9 ebee      	LDI  R30,LOW(190)
0003ea 940e 0780 	CALL SUBOPT_0xB
                +
0003ec edaf     +LDI R26 , LOW ( 2 * _0x0 + ( 57 ) )
0003ed e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 57 ) )
                 	__POINTW2FN _0x0,57
0003ee 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01AA   else if  ( SEN22 )           {Move(CCW,CW,255,190);lcd_gotoxy(0,0);lcd_putsf("22");}
0003f0 c058      	RJMP _0x82
                 _0x81:
0003f1 e0a0      	LDI  R26,0
0003f2 99cb      	SBIC 0x19,3
0003f3 e0a1      	LDI  R26,1
0003f4 940e 076a 	CALL SUBOPT_0x7
0003f6 f051      	BREQ _0x83
0003f7 940e 0783 	CALL SUBOPT_0xC
0003f9 ebae      	LDI  R26,LOW(190)
0003fa 940e 0763 	CALL SUBOPT_0x6
                +
0003fc eea2     +LDI R26 , LOW ( 2 * _0x0 + ( 60 ) )
0003fd e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 60 ) )
                 	__POINTW2FN _0x0,60
0003fe 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01AB 
                 ; 0000 01AC   else if  ( SEN2 )            {Move(CW,CCW,100,255);lcd_gotoxy(0,0);lcd_putsf("02");}
000400 c048      	RJMP _0x84
                 _0x83:
000401 e0a0      	LDI  R26,0
000402 9981      	SBIC 0x10,1
000403 e0a1      	LDI  R26,1
000404 940e 076a 	CALL SUBOPT_0x7
000406 f051      	BREQ _0x85
000407 940e 0774 	CALL SUBOPT_0x9
000409 e6e4      	LDI  R30,LOW(100)
00040a 940e 0780 	CALL SUBOPT_0xB
                +
00040c eea5     +LDI R26 , LOW ( 2 * _0x0 + ( 63 ) )
00040d e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 63 ) )
                 	__POINTW2FN _0x0,63
00040e 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01AD   else if  ( SEN23 )           {Move(CCW,CW,255,100);lcd_gotoxy(0,0);lcd_putsf("23");}
000410 c038      	RJMP _0x86
                 _0x85:
000411 e0a0      	LDI  R26,0
000412 99cc      	SBIC 0x19,4
000413 e0a1      	LDI  R26,1
000414 940e 076a 	CALL SUBOPT_0x7
000416 f051      	BREQ _0x87
000417 940e 0783 	CALL SUBOPT_0xC
000419 e6a4      	LDI  R26,LOW(100)
00041a 940e 0763 	CALL SUBOPT_0x6
                +
00041c eea8     +LDI R26 , LOW ( 2 * _0x0 + ( 66 ) )
00041d e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 66 ) )
                 	__POINTW2FN _0x0,66
00041e 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01AE 
                 ; 0000 01AF   else if  ( SEN1 )            {Move(CW,CCW,50,255);lcd_gotoxy(0,0);lcd_putsf("01");}
000420 c028      	RJMP _0x88
                 _0x87:
000421 e0a0      	LDI  R26,0
000422 9980      	SBIC 0x10,0
000423 e0a1      	LDI  R26,1
000424 940e 076a 	CALL SUBOPT_0x7
000426 f051      	BREQ _0x89
000427 940e 0774 	CALL SUBOPT_0x9
000429 e3e2      	LDI  R30,LOW(50)
00042a 940e 0780 	CALL SUBOPT_0xB
                +
00042c eeab     +LDI R26 , LOW ( 2 * _0x0 + ( 69 ) )
00042d e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 69 ) )
                 	__POINTW2FN _0x0,69
00042e 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01B0   else if  ( SEN24 )           {Move(CCW,CW,255,50);lcd_gotoxy(0,0);lcd_putsf("24");}
000430 c018      	RJMP _0x8A
                 _0x89:
000431 e0a0      	LDI  R26,0
000432 99cd      	SBIC 0x19,5
000433 e0a1      	LDI  R26,1
000434 940e 076a 	CALL SUBOPT_0x7
000436 f051      	BREQ _0x8B
000437 940e 0783 	CALL SUBOPT_0xC
000439 e3a2      	LDI  R26,LOW(50)
00043a 940e 0763 	CALL SUBOPT_0x6
                +
00043c eeae     +LDI R26 , LOW ( 2 * _0x0 + ( 72 ) )
00043d e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 72 ) )
                 	__POINTW2FN _0x0,72
00043e 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01B1 
                 ; 0000 01B2   else {Move(CW,CW,0,0);lcd_clear();}
000440 c008      	RJMP _0x8C
                 _0x8B:
000441 940e 0757 	CALL SUBOPT_0x4
000443 e0e0      	LDI  R30,LOW(0)
000444 93ea      	ST   -Y,R30
000445 e0a0      	LDI  R26,LOW(0)
000446 de15      	RCALL _Move
000447 940e 06b8 	CALL _lcd_clear
                 _0x8C:
                 _0x8A:
                 _0x88:
                 _0x86:
                 _0x84:
                 _0x82:
                 _0x80:
                 _0x7E:
                 _0x7C:
                 _0x7A:
                 _0x78:
                 _0x75:
                 _0x72:
                 _0x70:
                 _0x6E:
                 _0x6C:
                 _0x6A:
                 _0x68:
                 _0x66:
                 _0x63:
                 _0x60:
                 _0x5E:
                 ; 0000 01B3  }
                 _0x5C:
                 _0x5B:
                 _0x59:
                 _0x58:
                 _0x56:
                 _0x54:
                 _0x52:
                 _0x50:
000449 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void choose()
                 ; 0000 01B7 {
                 _choose:
                 ; .FSTART _choose
                 ; 0000 01B8 
                 ; 0000 01B9 
                 ; 0000 01BA 
                 ; 0000 01BB  if ( !SWR &&  SWM &&  SWL) {f2=1;delay_ms(20);while(f2==1)
00044a 990b      	SBIC 0x1,3
00044b c004      	RJMP _0x8E
00044c 9b09      	SBIS 0x1,1
00044d c002      	RJMP _0x8E
00044e 990a      	SBIC 0x1,2
00044f c001      	RJMP _0x8F
                 _0x8E:
000450 c035      	RJMP _0x8D
                 _0x8F:
000451 940e 078a 	CALL SUBOPT_0xD
                 _0x90:
000453 fe21      	SBRS R2,1
000454 c031      	RJMP _0x92
                 ; 0000 01BC   {
                 ; 0000 01BD 
                 ; 0000 01BE    if ( SWR &&  SWM &&  !SWL){lcd_clear();while(1){LineFollower();}}
000455 9b0b      	SBIS 0x1,3
000456 c004      	RJMP _0x94
000457 9b09      	SBIS 0x1,1
000458 c002      	RJMP _0x94
000459 9b0a      	SBIS 0x1,2
00045a c001      	RJMP _0x95
                 _0x94:
00045b c004      	RJMP _0x93
                 _0x95:
00045c 940e 06b8 	CALL _lcd_clear
                 _0x96:
00045e de0a      	RCALL _LineFollower
00045f cffe      	RJMP _0x96
                 ; 0000 01BF 
                 ; 0000 01C0    V = VolomADC;
                 _0x93:
000460 e0a6      	LDI  R26,LOW(6)
000461 ddec      	RCALL _read_adc
000462 2e9e      	MOV  R9,R30
                 ; 0000 01C1       lcd_gotoxy(0,0);
000463 940e 076f 	CALL SUBOPT_0x8
                 ; 0000 01C2       lcd_putsf("Line Followe");
                +
000465 efa1     +LDI R26 , LOW ( 2 * _0x0 + ( 75 ) )
000466 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 75 ) )
                 	__POINTW2FN _0x0,75
000467 940e 0790 	CALL SUBOPT_0xE
                 ; 0000 01C3       lcd_gotoxy(13,0);
                 ; 0000 01C4         lcd_putsf("<0>");
                 ; 0000 01C5       lcd_gotoxy(0,1);
                 ; 0000 01C6        lcd_putsf("speed: +");
                +
000469 e0a2     +LDI R26 , LOW ( 2 * _0x0 + ( 92 ) )
00046a e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 92 ) )
                 	__POINTW2FN _0x0,92
00046b 940e 07a0 	CALL SUBOPT_0xF
                 ; 0000 01C7       lcd_gotoxy(0,13);
00046d e0ad      	LDI  R26,LOW(13)
00046e 940e 07a5 	CALL SUBOPT_0x10
                 ; 0000 01C8        itoa(V,str);
                 ; 0000 01C9        lcd_puts(str);
                 ; 0000 01CA        lcd_putsf("%");
                +
000470 e0ab     +LDI R26 , LOW ( 2 * _0x0 + ( 101 ) )
000471 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 101 ) )
                 	__POINTW2FN _0x0,101
000472 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01CB 
                 ; 0000 01CC    if(V==9 || V==99)lcd_clear();
000474 e0e9      	LDI  R30,LOW(9)
000475 15e9      	CP   R30,R9
000476 f019      	BREQ _0x9A
000477 e6e3      	LDI  R30,LOW(99)
000478 15e9      	CP   R30,R9
000479 f411      	BRNE _0x99
                 _0x9A:
00047a 940e 06b8 	CALL _lcd_clear
                 ; 0000 01CD 
                 ; 0000 01CE    //p=0;LineFollower();
                 ; 0000 01CF 
                 ; 0000 01D0    if ( !SWR &&  SWM &&  SWL)f2=0;      //sicktir
                 _0x99:
00047c 990b      	SBIC 0x1,3
00047d c004      	RJMP _0x9D
00047e 9b09      	SBIS 0x1,1
00047f c002      	RJMP _0x9D
000480 990a      	SBIC 0x1,2
000481 c001      	RJMP _0x9E
                 _0x9D:
000482 c002      	RJMP _0x9C
                 _0x9E:
000483 94e8      	CLT
000484 f821      	BLD  R2,1
                 ; 0000 01D1   }}
                 _0x9C:
000485 cfcd      	RJMP _0x90
                 _0x92:
                 ; 0000 01D2 
                 ; 0000 01D3  if (  SWR && !SWM &&  SWL) {f2=1;delay_ms(20);while(f2==1)
                 _0x8D:
000486 9b0b      	SBIS 0x1,3
000487 c004      	RJMP _0xA0
000488 9909      	SBIC 0x1,1
000489 c002      	RJMP _0xA0
00048a 990a      	SBIC 0x1,2
00048b c001      	RJMP _0xA1
                 _0xA0:
00048c c023      	RJMP _0x9F
                 _0xA1:
00048d 940e 078a 	CALL SUBOPT_0xD
                 _0xA2:
00048f fe21      	SBRS R2,1
000490 c01f      	RJMP _0xA4
                 ; 0000 01D4   {
                 ; 0000 01D5       lcd_gotoxy(0,0);
000491 940e 076f 	CALL SUBOPT_0x8
                 ; 0000 01D6       lcd_putsf("Color Sensor");
                +
000493 e0ad     +LDI R26 , LOW ( 2 * _0x0 + ( 103 ) )
000494 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 103 ) )
                 	__POINTW2FN _0x0,103
000495 940e 0790 	CALL SUBOPT_0xE
                 ; 0000 01D7       lcd_gotoxy(13,0);
                 ; 0000 01D8         lcd_putsf("<0>");
                 ; 0000 01D9       lcd_gotoxy(0,1);
                 ; 0000 01DA       lcd_putsf("set=");
                +
000497 e1aa     +LDI R26 , LOW ( 2 * _0x0 + ( 116 ) )
000498 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 116 ) )
                 	__POINTW2FN _0x0,116
000499 940e 07a0 	CALL SUBOPT_0xF
                 ; 0000 01DB       lcd_gotoxy(0,14);
00049b e0ae      	LDI  R26,LOW(14)
00049c 940e 07a5 	CALL SUBOPT_0x10
                 ; 0000 01DC       itoa(V,str);
                 ; 0000 01DD       lcd_puts(str);
                 ; 0000 01DE       if(V==9 || V==99)lcd_clear();
00049e e0e9      	LDI  R30,LOW(9)
00049f 15e9      	CP   R30,R9
0004a0 f019      	BREQ _0xA6
0004a1 e6e3      	LDI  R30,LOW(99)
0004a2 15e9      	CP   R30,R9
0004a3 f411      	BRNE _0xA5
                 _0xA6:
0004a4 940e 06b8 	CALL _lcd_clear
                 ; 0000 01DF       if ( !SWR && SWM &&  SWL)f2=0;      //sicktir
                 _0xA5:
0004a6 990b      	SBIC 0x1,3
0004a7 c004      	RJMP _0xA9
0004a8 9b09      	SBIS 0x1,1
0004a9 c002      	RJMP _0xA9
0004aa 990a      	SBIC 0x1,2
0004ab c001      	RJMP _0xAA
                 _0xA9:
0004ac c002      	RJMP _0xA8
                 _0xAA:
0004ad 94e8      	CLT
0004ae f821      	BLD  R2,1
                 ; 0000 01E0   }}
                 _0xA8:
0004af cfdf      	RJMP _0xA2
                 _0xA4:
                 ; 0000 01E1 
                 ; 0000 01E2  if (  SWR &&  SWM && !SWL) {f2=1;delay_ms(20);while(f2==1)
                 _0x9F:
0004b0 9b0b      	SBIS 0x1,3
0004b1 c004      	RJMP _0xAC
0004b2 9b09      	SBIS 0x1,1
0004b3 c002      	RJMP _0xAC
0004b4 9b0a      	SBIS 0x1,2
0004b5 c001      	RJMP _0xAD
                 _0xAC:
0004b6 c05c      	RJMP _0xAB
                 _0xAD:
0004b7 940e 078a 	CALL SUBOPT_0xD
                 _0xAE:
0004b9 fe21      	SBRS R2,1
0004ba c058      	RJMP _0xB0
                 ; 0000 01E3   {
                 ; 0000 01E4       lcd_gotoxy(0,0);
0004bb 940e 076f 	CALL SUBOPT_0x8
                 ; 0000 01E5       lcd_putsf("UltraSonic");
                +
0004bd e1af     +LDI R26 , LOW ( 2 * _0x0 + ( 121 ) )
0004be e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 121 ) )
                 	__POINTW2FN _0x0,121
0004bf 940e 0790 	CALL SUBOPT_0xE
                 ; 0000 01E6       lcd_gotoxy(13,0);
                 ; 0000 01E7         lcd_putsf("<0>");
                 ; 0000 01E8       lcd_gotoxy(0,1);
                 ; 0000 01E9       lcd_putsf("=");
                +
0004c1 e1ad     +LDI R26 , LOW ( 2 * _0x0 + ( 119 ) )
0004c2 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 119 ) )
                 	__POINTW2FN _0x0,119
0004c3 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01EA 
                 ; 0000 01EB        UsTrig=1;
0004c5 9a1e      	SBI  0x3,6
                 ; 0000 01EC        delay_us(20);
                +
0004c6 e68b     +LDI R24 , LOW ( 107 )
                +__DELAY_USB_LOOP :
0004c7 958a     +DEC R24
0004c8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 107
                 ; 0000 01ED        UsTrig=0;
0004c9 981e      	CBI  0x3,6
                 ; 0000 01EE        delay_us(20);
                +
0004ca e68b     +LDI R24 , LOW ( 107 )
                +__DELAY_USB_LOOP :
0004cb 958a     +DEC R24
0004cc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 107
                 ; 0000 01EF 
                 ; 0000 01F0       lcd_gotoxy(2,1);
0004cd e0e2      	LDI  R30,LOW(2)
0004ce 940e 07b3 	CALL SUBOPT_0x11
                 ; 0000 01F1       itoa(u,str);
0004d0 91e0 0510 	LDS  R30,_u
0004d2 91f0 0511 	LDS  R31,_u+1
0004d4 9160 0512 	LDS  R22,_u+2
0004d6 9170 0513 	LDS  R23,_u+3
0004d8 940e 0826 	CALL __CFD1
0004da 93fa      	ST   -Y,R31
0004db 93ea      	ST   -Y,R30
0004dc e0a0      	LDI  R26,LOW(_str)
0004dd e0b5      	LDI  R27,HIGH(_str)
0004de 940e 0647 	CALL _itoa
                 ; 0000 01F2       lcd_puts(str);
0004e0 e0a0      	LDI  R26,LOW(_str)
0004e1 e0b5      	LDI  R27,HIGH(_str)
0004e2 940e 06e6 	CALL _lcd_puts
                 ; 0000 01F3       lcd_putsf("cm");
                +
0004e4 e2aa     +LDI R26 , LOW ( 2 * _0x0 + ( 132 ) )
0004e5 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 132 ) )
                 	__POINTW2FN _0x0,132
0004e6 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01F4 
                 ; 0000 01F5       lcd_gotoxy(6,1);
0004e8 e0e6      	LDI  R30,LOW(6)
0004e9 940e 07b3 	CALL SUBOPT_0x11
                 ; 0000 01F6       lcd_putsf(" set=5~16");
                +
0004eb e2ad     +LDI R26 , LOW ( 2 * _0x0 + ( 135 ) )
0004ec e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 135 ) )
                 	__POINTW2FN _0x0,135
0004ed 940e 06f5 	CALL _lcd_putsf
                 ; 0000 01F7 
                 ; 0000 01F8 
                 ; 0000 01F9       if(u==9 || u==99)lcd_clear();
0004ef 940e 07b7 	CALL SUBOPT_0x12
                +
0004f1 30a0     +CPI R26 , LOW ( 0x41100000 )
0004f2 e0e0     +LDI R30 , HIGH ( 0x41100000 )
0004f3 07be     +CPC R27 , R30
0004f4 e1e0     +LDI R30 , BYTE3 ( 0x41100000 )
0004f5 078e     +CPC R24 , R30
0004f6 e4e1     +LDI R30 , BYTE4 ( 0x41100000 )
0004f7 079e     +CPC R25 , R30
                 	__CPD2N 0x41100000
0004f8 f051      	BREQ _0xB6
0004f9 940e 07b7 	CALL SUBOPT_0x12
                +
0004fb 30a0     +CPI R26 , LOW ( 0x42C60000 )
0004fc e0e0     +LDI R30 , HIGH ( 0x42C60000 )
0004fd 07be     +CPC R27 , R30
0004fe ece6     +LDI R30 , BYTE3 ( 0x42C60000 )
0004ff 078e     +CPC R24 , R30
000500 e4e2     +LDI R30 , BYTE4 ( 0x42C60000 )
000501 079e     +CPC R25 , R30
                 	__CPD2N 0x42C60000
000502 f411      	BRNE _0xB5
                 _0xB6:
000503 940e 06b8 	CALL _lcd_clear
                 ; 0000 01FA 
                 ; 0000 01FB       p=1;LineFollower();
                 _0xB5:
000505 e0e1      	LDI  R30,LOW(1)
000506 93e0 0506 	STS  _p,R30
000508 dd60      	RCALL _LineFollower
                 ; 0000 01FC 
                 ; 0000 01FD       if ( !SWR &&  SWM &&  SWL)f2=0;      //sicktir
000509 990b      	SBIC 0x1,3
00050a c004      	RJMP _0xB9
00050b 9b09      	SBIS 0x1,1
00050c c002      	RJMP _0xB9
00050d 990a      	SBIC 0x1,2
00050e c001      	RJMP _0xBA
                 _0xB9:
00050f c002      	RJMP _0xB8
                 _0xBA:
000510 94e8      	CLT
000511 f821      	BLD  R2,1
                 ; 0000 01FE   }}
                 _0xB8:
000512 cfa6      	RJMP _0xAE
                 _0xB0:
                 ; 0000 01FF 
                 ; 0000 0200 
                 ; 0000 0201 }
                 _0xAB:
000513 9508      	RET
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0204 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0205 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
000514 e0e7      	LDI  R30,LOW(7)
000515 bbea      	OUT  0x1A,R30
                 ; 0000 0206 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000516 e0e0      	LDI  R30,LOW(0)
000517 bbeb      	OUT  0x1B,R30
                 ; 0000 0207 
                 ; 0000 0208 DDRB=(0<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
000518 e7ef      	LDI  R30,LOW(127)
000519 bbe7      	OUT  0x17,R30
                 ; 0000 0209 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00051a e0e0      	LDI  R30,LOW(0)
00051b bbe8      	OUT  0x18,R30
                 ; 0000 020A 
                 ; 0000 020B DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
00051c bbe4      	OUT  0x14,R30
                 ; 0000 020C PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00051d bbe5      	OUT  0x15,R30
                 ; 0000 020D 
                 ; 0000 020E DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00051e bbe1      	OUT  0x11,R30
                 ; 0000 020F PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
00051f bbe2      	OUT  0x12,R30
                 ; 0000 0210 
                 ; 0000 0211 DDRE=(1<<DDE7) | (1<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (1<<DDE0);
000520 ece1      	LDI  R30,LOW(193)
000521 b9e2      	OUT  0x2,R30
                 ; 0000 0212 PORTE=(0<<PORTE7) | (1<<PORTE6) | (1<<PORTE5) | (1<<PORTE4) | (1<<PORTE3) | (1<<PORTE2) | (1<<PORTE1) | (0<<PORTE0);
000522 e7ee      	LDI  R30,LOW(126)
000523 b9e3      	OUT  0x3,R30
                 ; 0000 0213 
                 ; 0000 0214 DDRF=(1<<DDF7) | (0<<DDF6) | (0<<DDF5) | (1<<DDF4) | (0<<DDF3) | (1<<DDF2) | (1<<DDF1) | (1<<DDF0);
000524 e9e7      	LDI  R30,LOW(151)
000525 93e0 0061 	STS  97,R30
                 ; 0000 0215 PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
000527 e0e0      	LDI  R30,LOW(0)
000528 93e0 0062 	STS  98,R30
                 ; 0000 0216 
                 ; 0000 0217 DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
00052a 93e0 0064 	STS  100,R30
                 ; 0000 0218 PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
00052c 93e0 0065 	STS  101,R30
                 ; 0000 0219 
                 ; 0000 021A // Timer/Counter 0 initialization
                 ; 0000 021B // Clock source: System Clock
                 ; 0000 021C // Clock value: 62.500 kHz
                 ; 0000 021D // Mode: Normal top=0xFF
                 ; 0000 021E // OC0 output: Disconnected
                 ; 0000 021F // Timer Period: 4.096 ms
                 ; 0000 0220 ASSR=0<<AS0;
00052e bfe0      	OUT  0x30,R30
                 ; 0000 0221 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (1<<CS01) | (0<<CS00);
00052f e0e6      	LDI  R30,LOW(6)
000530 bfe3      	OUT  0x33,R30
                 ; 0000 0222 TCNT0=0x00;
000531 e0e0      	LDI  R30,LOW(0)
000532 bfe2      	OUT  0x32,R30
                 ; 0000 0223 OCR0=0x00;
000533 bfe1      	OUT  0x31,R30
                 ; 0000 0224 // Timer/Counter 1 initialization
                 ; 0000 0225 // Clock source: System Clock
                 ; 0000 0226 // Clock value: 16000.000 kHz
                 ; 0000 0227 // Mode: Normal top=0xFFFF
                 ; 0000 0228 // OC1A output: Disconnected
                 ; 0000 0229 // OC1B output: Disconnected
                 ; 0000 022A // OC1C output: Disconnected
                 ; 0000 022B // Noise Canceler: Off
                 ; 0000 022C // Input Capture on Falling Edge
                 ; 0000 022D // Timer Period: 0.01 ms
                 ; 0000 022E // Timer1 Overflow Interrupt: On
                 ; 0000 022F // Input Capture Interrupt: Off
                 ; 0000 0230 // Compare A Match Interrupt: Off
                 ; 0000 0231 // Compare B Match Interrupt: Off
                 ; 0000 0232 // Compare C Match Interrupt: Off
                 ; 0000 0233 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
000534 bdef      	OUT  0x2F,R30
                 ; 0000 0234 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
000535 e0e1      	LDI  R30,LOW(1)
000536 bdee      	OUT  0x2E,R30
                 ; 0000 0235 TCNT1H=0xFF;
000537 940e 0742 	CALL SUBOPT_0x1
                 ; 0000 0236 TCNT1L=0x60;
                 ; 0000 0237 ICR1H=0x00;
000539 e0e0      	LDI  R30,LOW(0)
00053a bde7      	OUT  0x27,R30
                 ; 0000 0238 ICR1L=0x00;
00053b bde6      	OUT  0x26,R30
                 ; 0000 0239 OCR1AH=0x00;
00053c bdeb      	OUT  0x2B,R30
                 ; 0000 023A OCR1AL=0x00;
00053d bdea      	OUT  0x2A,R30
                 ; 0000 023B OCR1BH=0x00;
00053e bde9      	OUT  0x29,R30
                 ; 0000 023C OCR1BL=0x00;
00053f bde8      	OUT  0x28,R30
                 ; 0000 023D OCR1CH=0x00;
000540 93e0 0079 	STS  121,R30
                 ; 0000 023E OCR1CL=0x00;
000542 93e0 0078 	STS  120,R30
                 ; 0000 023F 
                 ; 0000 0240 // Timer/Counter 2 initialization
                 ; 0000 0241 // Clock source: System Clock
                 ; 0000 0242 // Clock value: 62.500 kHz
                 ; 0000 0243 // Mode: Normal top=0xFF
                 ; 0000 0244 // OC2 output: Disconnected
                 ; 0000 0245 // Timer Period: 4.096 ms
                 ; 0000 0246 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (1<<CS22) | (0<<CS21) | (0<<CS20);
000544 e0e4      	LDI  R30,LOW(4)
000545 bde5      	OUT  0x25,R30
                 ; 0000 0247 TCNT2=0x00;
000546 e0e0      	LDI  R30,LOW(0)
000547 bde4      	OUT  0x24,R30
                 ; 0000 0248 OCR2=0x00;
000548 bde3      	OUT  0x23,R30
                 ; 0000 0249 
                 ; 0000 024A // Timer/Counter 3 initialization
                 ; 0000 024B // Clock source: System Clock
                 ; 0000 024C // Clock value: 15.625 kHz
                 ; 0000 024D // Mode: Normal top=0xFFFF
                 ; 0000 024E // OC3A output: Disconnected
                 ; 0000 024F // OC3B output: Disconnected
                 ; 0000 0250 // OC3C output: Disconnected
                 ; 0000 0251 // Noise Canceler: Off
                 ; 0000 0252 // Input Capture on Falling Edge
                 ; 0000 0253 // Timer Period: 4.1943 s
                 ; 0000 0254 // Timer3 Overflow Interrupt: Off
                 ; 0000 0255 // Input Capture Interrupt: Off
                 ; 0000 0256 // Compare A Match Interrupt: Off
                 ; 0000 0257 // Compare B Match Interrupt: Off
                 ; 0000 0258 // Compare C Match Interrupt: Off
                 ; 0000 0259 TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
000549 93e0 008b 	STS  139,R30
                 ; 0000 025A TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
00054b 93e0 008a 	STS  138,R30
                 ; 0000 025B TCNT3H=0x00;
00054d 93e0 0089 	STS  137,R30
                 ; 0000 025C TCNT3L=0x00;
00054f 93e0 0088 	STS  136,R30
                 ; 0000 025D ICR3H=0x00;
000551 93e0 0081 	STS  129,R30
                 ; 0000 025E ICR3L=0x00;
000553 93e0 0080 	STS  128,R30
                 ; 0000 025F OCR3AH=0x00;
000555 93e0 0087 	STS  135,R30
                 ; 0000 0260 OCR3AL=0x00;
000557 93e0 0086 	STS  134,R30
                 ; 0000 0261 OCR3BH=0x00;
000559 93e0 0085 	STS  133,R30
                 ; 0000 0262 OCR3BL=0x00;
00055b 93e0 0084 	STS  132,R30
                 ; 0000 0263 OCR3CH=0x00;
00055d 93e0 0083 	STS  131,R30
                 ; 0000 0264 OCR3CL=0x00;
00055f 93e0 0082 	STS  130,R30
                 ; 0000 0265 
                 ; 0000 0266 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0267 TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
000561 e4e5      	LDI  R30,LOW(69)
000562 bfe7      	OUT  0x37,R30
                 ; 0000 0268 ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
000563 e0e0      	LDI  R30,LOW(0)
000564 93e0 007d 	STS  125,R30
                 ; 0000 0269 
                 ; 0000 026A // External Interrupt(s) initialization
                 ; 0000 026B // INT0: Off
                 ; 0000 026C // INT1: Off
                 ; 0000 026D // INT2: Off
                 ; 0000 026E // INT3: Off
                 ; 0000 026F // INT4: Off
                 ; 0000 0270 // INT5: On
                 ; 0000 0271 // INT5 Mode: Any change
                 ; 0000 0272 // INT6: Off
                 ; 0000 0273 // INT7: Off
                 ; 0000 0274 EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000566 93e0 006a 	STS  106,R30
                 ; 0000 0275 EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (1<<ISC50) | (0<<ISC41) | (0<<ISC40);
000568 e0e4      	LDI  R30,LOW(4)
000569 bfea      	OUT  0x3A,R30
                 ; 0000 0276 EIMSK=(0<<INT7) | (0<<INT6) | (1<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
00056a e2e0      	LDI  R30,LOW(32)
00056b bfe9      	OUT  0x39,R30
                 ; 0000 0277 EIFR=(0<<INTF7) | (0<<INTF6) | (1<<INTF5) | (0<<INTF4) | (0<<INTF3) | (0<<INTF2) | (0<<INTF1) | (0<<INTF0);
00056c bfe8      	OUT  0x38,R30
                 ; 0000 0278 
                 ; 0000 0279 // USART0 initialization
                 ; 0000 027A // USART0 disabled
                 ; 0000 027B UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
00056d e0e0      	LDI  R30,LOW(0)
00056e b9ea      	OUT  0xA,R30
                 ; 0000 027C 
                 ; 0000 027D // USART1 initialization
                 ; 0000 027E // USART1 disabled
                 ; 0000 027F UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
00056f 93e0 009a 	STS  154,R30
                 ; 0000 0280 
                 ; 0000 0281 // Analog Comparator initialization
                 ; 0000 0282 // Analog Comparator: Off
                 ; 0000 0283 // The Analog Comparator's positive input is
                 ; 0000 0284 // connected to the AIN0 pin
                 ; 0000 0285 // The Analog Comparator's negative input is
                 ; 0000 0286 // connected to the AIN1 pin
                 ; 0000 0287 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000571 e8e0      	LDI  R30,LOW(128)
000572 b9e8      	OUT  0x8,R30
                 ; 0000 0288 
                 ; 0000 0289 // ADC initialization
                 ; 0000 028A // ADC Clock frequency: 1000.000 kHz
                 ; 0000 028B // ADC Voltage Reference: AVCC pin
                 ; 0000 028C // Only the 8 most significant bits of
                 ; 0000 028D // the AD conversion result are used
                 ; 0000 028E ADMUX=ADC_VREF_TYPE;
000573 e6e0      	LDI  R30,LOW(96)
000574 b9e7      	OUT  0x7,R30
                 ; 0000 028F ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
000575 e8e4      	LDI  R30,LOW(132)
000576 b9e6      	OUT  0x6,R30
                 ; 0000 0290 SFIOR=(0<<ACME);
000577 e0e0      	LDI  R30,LOW(0)
000578 bde0      	OUT  0x20,R30
                 ; 0000 0291 
                 ; 0000 0292 // SPI initialization
                 ; 0000 0293 // SPI disabled
                 ; 0000 0294 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
000579 b9ed      	OUT  0xD,R30
                 ; 0000 0295 
                 ; 0000 0296 // TWI initialization
                 ; 0000 0297 // TWI disabled
                 ; 0000 0298 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
00057a 93e0 0074 	STS  116,R30
                 ; 0000 0299 
                 ; 0000 029A // Alphanumeric LCD initialization
                 ; 0000 029B // Connections are specified in the
                 ; 0000 029C // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 029D // RS - PORTB Bit 6
                 ; 0000 029E // RD - PORTB Bit 5
                 ; 0000 029F // EN - PORTB Bit 4
                 ; 0000 02A0 // D4 - PORTB Bit 3
                 ; 0000 02A1 // D5 - PORTB Bit 2
                 ; 0000 02A2 // D6 - PORTB Bit 1
                 ; 0000 02A3 // D7 - PORTE Bit 7
                 ; 0000 02A4 // Characters/line: 16
                 ; 0000 02A5 lcd_init(16);
00057c e1a0      	LDI  R26,LOW(16)
00057d 940e 0708 	CALL _lcd_init
                 ; 0000 02A6 
                 ; 0000 02A7 // Global enable interrupts
                 ; 0000 02A8 #asm("sei")
00057f 9478      	sei
                 ; 0000 02A9 
                 ; 0000 02AA 
                 ; 0000 02AB   j=10;
000580 e0ea      	LDI  R30,LOW(10)
000581 93e0 0508 	STS  _j,R30
                 ; 0000 02AC 
                 ; 0000 02AD lcd_gotoxy(0,0);
000583 940e 076f 	CALL SUBOPT_0x8
                 ; 0000 02AE lcd_putsf("HELP:    o  o  o ");
                +
000585 e3a7     +LDI R26 , LOW ( 2 * _0x0 + ( 145 ) )
000586 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 145 ) )
                 	__POINTW2FN _0x0,145
000587 940e 07a0 	CALL SUBOPT_0xF
                 ; 0000 02AF lcd_gotoxy(0,1);
000589 e0a1      	LDI  R26,LOW(1)
00058a 940e 06a7 	CALL _lcd_gotoxy
                 ; 0000 02B0 lcd_putsf("switchs  ^  ^  ^ ");
                +
00058c e4a9     +LDI R26 , LOW ( 2 * _0x0 + ( 163 ) )
00058d e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 163 ) )
                 	__POINTW2FN _0x0,163
00058e 940e 07c0 	CALL SUBOPT_0x13
                 ; 0000 02B1 
                 ; 0000 02B2 delay_ms(1000);
                 ; 0000 02B3 lcd_gotoxy(0,1);
000590 e0e0      	LDI  R30,LOW(0)
000591 940e 07b3 	CALL SUBOPT_0x11
                 ; 0000 02B4 lcd_putsf("                ");
                +
000593 e5ab     +LDI R26 , LOW ( 2 * _0x0 + ( 181 ) )
000594 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 181 ) )
                 	__POINTW2FN _0x0,181
000595 940e 06f5 	CALL _lcd_putsf
                 ; 0000 02B5 
                 ; 0000 02B6 delay_ms(300);
000597 e2ac      	LDI  R26,LOW(300)
000598 e0b1      	LDI  R27,HIGH(300)
000599 940e 07ff 	CALL _delay_ms
                 ; 0000 02B7 lcd_gotoxy(0,0);
00059b 940e 076f 	CALL SUBOPT_0x8
                 ; 0000 02B8 lcd_putsf("         +  o  o ");
                +
00059d e6ac     +LDI R26 , LOW ( 2 * _0x0 + ( 198 ) )
00059e e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 198 ) )
                 	__POINTW2FN _0x0,198
00059f 940e 06f5 	CALL _lcd_putsf
                 ; 0000 02B9 
                 ; 0000 02BA delay_ms(100);
0005a1 e6a4      	LDI  R26,LOW(100)
0005a2 940e 07c6 	CALL SUBOPT_0x14
                 ; 0000 02BB lcd_gotoxy(0,1);
                 ; 0000 02BC lcd_putsf(" <-    Back      ");
                +
0005a4 e7ae     +LDI R26 , LOW ( 2 * _0x0 + ( 216 ) )
0005a5 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 216 ) )
                 	__POINTW2FN _0x0,216
0005a6 940e 07c0 	CALL SUBOPT_0x13
                 ; 0000 02BD 
                 ; 0000 02BE delay_ms(1000);
                 ; 0000 02BF 
                 ; 0000 02C0 lcd_gotoxy(0,0);
0005a8 940e 076f 	CALL SUBOPT_0x8
                 ; 0000 02C1 lcd_putsf("         o  +  o ");
                +
0005aa e9a0     +LDI R26 , LOW ( 2 * _0x0 + ( 234 ) )
0005ab e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 234 ) )
                 	__POINTW2FN _0x0,234
0005ac 940e 07a0 	CALL SUBOPT_0xF
                 ; 0000 02C2 lcd_gotoxy(0,1);
0005ae e0a1      	LDI  R26,LOW(1)
0005af 940e 06a7 	CALL _lcd_gotoxy
                 ; 0000 02C3 lcd_putsf("                 ");
                +
0005b1 eaa2     +LDI R26 , LOW ( 2 * _0x0 + ( 252 ) )
0005b2 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 252 ) )
                 	__POINTW2FN _0x0,252
0005b3 940e 06f5 	CALL _lcd_putsf
                 ; 0000 02C4 
                 ; 0000 02C5 delay_ms(90);
0005b5 e5aa      	LDI  R26,LOW(90)
0005b6 940e 07c6 	CALL SUBOPT_0x14
                 ; 0000 02C6 lcd_gotoxy(0,1);
                 ; 0000 02C7 lcd_putsf("  -    Set   -   ");
                +
0005b8 eba4     +LDI R26 , LOW ( 2 * _0x0 + ( 270 ) )
0005b9 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 270 ) )
                 	__POINTW2FN _0x0,270
0005ba 940e 07c0 	CALL SUBOPT_0x13
                 ; 0000 02C8 
                 ; 0000 02C9 delay_ms(1000);
                 ; 0000 02CA 
                 ; 0000 02CB lcd_gotoxy(0,0);
0005bc 940e 076f 	CALL SUBOPT_0x8
                 ; 0000 02CC lcd_putsf("         o  o  + ");
                +
0005be eca6     +LDI R26 , LOW ( 2 * _0x0 + ( 288 ) )
0005bf e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 288 ) )
                 	__POINTW2FN _0x0,288
0005c0 940e 07a0 	CALL SUBOPT_0xF
                 ; 0000 02CD lcd_gotoxy(0,1);
0005c2 e0a1      	LDI  R26,LOW(1)
0005c3 940e 06a7 	CALL _lcd_gotoxy
                 ; 0000 02CE lcd_putsf("                ");
                +
0005c5 e5ab     +LDI R26 , LOW ( 2 * _0x0 + ( 181 ) )
0005c6 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 181 ) )
                 	__POINTW2FN _0x0,181
0005c7 940e 06f5 	CALL _lcd_putsf
                 ; 0000 02CF 
                 ; 0000 02D0 delay_ms(90);
0005c9 e5aa      	LDI  R26,LOW(90)
0005ca 940e 07c6 	CALL SUBOPT_0x14
                 ; 0000 02D1 lcd_gotoxy(0,1);
                 ; 0000 02D2 lcd_putsf("     Start   -> ");
                +
0005cc eda8     +LDI R26 , LOW ( 2 * _0x0 + ( 306 ) )
0005cd e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 306 ) )
                 	__POINTW2FN _0x0,306
0005ce 940e 07c0 	CALL SUBOPT_0x13
                 ; 0000 02D3 
                 ; 0000 02D4 delay_ms(1000);
                 ; 0000 02D5 
                 ; 0000 02D6 
                 ; 0000 02D7 
                 ; 0000 02D8 lcd_gotoxy(0,0);
0005d0 940e 076f 	CALL SUBOPT_0x8
                 ; 0000 02D9 lcd_putsf("   Welcome !    ");
                +
0005d2 eea9     +LDI R26 , LOW ( 2 * _0x0 + ( 323 ) )
0005d3 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 323 ) )
                 	__POINTW2FN _0x0,323
0005d4 940e 07a0 	CALL SUBOPT_0xF
                 ; 0000 02DA lcd_gotoxy(0,1);
0005d6 e0a1      	LDI  R26,LOW(1)
0005d7 940e 06a7 	CALL _lcd_gotoxy
                 ; 0000 02DB delay_ms(j);
0005d9 91a0 0508 	LDS  R26,_j
0005db 27bb      	CLR  R27
0005dc 940e 07ff 	CALL _delay_ms
                 ; 0000 02DC 
                 ; 0000 02DD  j=0;
0005de e0e0      	LDI  R30,LOW(0)
0005df 93e0 0508 	STS  _j,R30
                 ; 0000 02DE 
                 ; 0000 02DF while (1)
                 _0xBB:
                 ; 0000 02E0       {
                 ; 0000 02E1        choose();
0005e1 de68      	RCALL _choose
                 ; 0000 02E2 
                 ; 0000 02E3         for (j=8;j>0;j--)
0005e2 e0e8      	LDI  R30,LOW(8)
0005e3 93e0 0508 	STS  _j,R30
                 _0xBF:
0005e5 91a0 0508 	LDS  R26,_j
0005e7 30a1      	CPI  R26,LOW(0x1)
0005e8 f0d0      	BRLO _0xC0
                 ; 0000 02E4         {
                 ; 0000 02E5                choose();
0005e9 940e 07cb 	CALL SUBOPT_0x15
                 ; 0000 02E6         lcd_gotoxy(0,0);
                 ; 0000 02E7         lcd_putsf("Choose:  1  2  3");
0005eb 940e 07ce 	CALL SUBOPT_0x16
                 ; 0000 02E8         lcd_gotoxy(j,1);
                 ; 0000 02E9         lcd_putsf("1: Line Follow");
                +
0005ed e0ab     +LDI R26 , LOW ( 2 * _0x0 + ( 357 ) )
0005ee e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 357 ) )
                 	__POINTW2FN _0x0,357
0005ef 940e 07d5 	CALL SUBOPT_0x17
                 ; 0000 02EA         delay_ms(15);
                 ; 0000 02EB          if(j==1) {for(j1=0;j1<51;j1++){choose();delay_ms(20);}} //delay_ms(500);
0005f1 f461      	BRNE _0xC1
0005f2 e0e0      	LDI  R30,LOW(0)
0005f3 93e0 0509 	STS  _j1,R30
                 _0xC3:
0005f5 91a0 0509 	LDS  R26,_j1
0005f7 33a3      	CPI  R26,LOW(0x33)
0005f8 f428      	BRSH _0xC4
0005f9 940e 07df 	CALL SUBOPT_0x18
0005fb 940e 07e5 	CALL SUBOPT_0x19
0005fd cff7      	RJMP _0xC3
                 _0xC4:
                 ; 0000 02EC         lcd_clear();
                 _0xC1:
0005fe 940e 06b8 	CALL _lcd_clear
                 ; 0000 02ED         }
000600 940e 07eb 	CALL SUBOPT_0x1A
000602 cfe2      	RJMP _0xBF
                 _0xC0:
                 ; 0000 02EE 
                 ; 0000 02EF         for (j=8;j>0;j--)
000603 e0e8      	LDI  R30,LOW(8)
000604 93e0 0508 	STS  _j,R30
                 _0xC6:
000606 91a0 0508 	LDS  R26,_j
000608 30a1      	CPI  R26,LOW(0x1)
000609 f0d0      	BRLO _0xC7
                 ; 0000 02F0         {
                 ; 0000 02F1                choose();
00060a 940e 07cb 	CALL SUBOPT_0x15
                 ; 0000 02F2         lcd_gotoxy(0,0);
                 ; 0000 02F3         lcd_putsf("Choose:  1  2  3");
00060c 940e 07ce 	CALL SUBOPT_0x16
                 ; 0000 02F4         lcd_gotoxy(j,1);
                 ; 0000 02F5         lcd_putsf("2: +Color");
                +
00060e e1aa     +LDI R26 , LOW ( 2 * _0x0 + ( 372 ) )
00060f e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 372 ) )
                 	__POINTW2FN _0x0,372
000610 940e 07d5 	CALL SUBOPT_0x17
                 ; 0000 02F6         delay_ms(15);
                 ; 0000 02F7         //if(j==1) delay_ms(500);
                 ; 0000 02F8          if(j==1) {for(j1=0;j1<51;j1++){choose();delay_ms(20);}}
000612 f461      	BRNE _0xC8
000613 e0e0      	LDI  R30,LOW(0)
000614 93e0 0509 	STS  _j1,R30
                 _0xCA:
000616 91a0 0509 	LDS  R26,_j1
000618 33a3      	CPI  R26,LOW(0x33)
000619 f428      	BRSH _0xCB
00061a 940e 07df 	CALL SUBOPT_0x18
00061c 940e 07e5 	CALL SUBOPT_0x19
00061e cff7      	RJMP _0xCA
                 _0xCB:
                 ; 0000 02F9         lcd_clear();
                 _0xC8:
00061f 940e 06b8 	CALL _lcd_clear
                 ; 0000 02FA         }
000621 940e 07eb 	CALL SUBOPT_0x1A
000623 cfe2      	RJMP _0xC6
                 _0xC7:
                 ; 0000 02FB 
                 ; 0000 02FC         for (j=8;j>0;j--)
000624 e0e8      	LDI  R30,LOW(8)
000625 93e0 0508 	STS  _j,R30
                 _0xCD:
000627 91a0 0508 	LDS  R26,_j
000629 30a1      	CPI  R26,LOW(0x1)
00062a f0d0      	BRLO _0xCE
                 ; 0000 02FD         {
                 ; 0000 02FE                choose();
00062b 940e 07cb 	CALL SUBOPT_0x15
                 ; 0000 02FF         lcd_gotoxy(0,0);
                 ; 0000 0300         lcd_putsf("Choose:  1  2  3");
00062d 940e 07ce 	CALL SUBOPT_0x16
                 ; 0000 0301         lcd_gotoxy(j,1);
                 ; 0000 0302         lcd_putsf("3: +Obstacle");
                +
00062f e2a4     +LDI R26 , LOW ( 2 * _0x0 + ( 382 ) )
000630 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 382 ) )
                 	__POINTW2FN _0x0,382
000631 940e 07d5 	CALL SUBOPT_0x17
                 ; 0000 0303         delay_ms(15);
                 ; 0000 0304         //if(j==1) delay_ms(500);
                 ; 0000 0305          if(j==1) {for(j1=0;j1<51;j1++){choose();delay_ms(20);}}
000633 f461      	BRNE _0xCF
000634 e0e0      	LDI  R30,LOW(0)
000635 93e0 0509 	STS  _j1,R30
                 _0xD1:
000637 91a0 0509 	LDS  R26,_j1
000639 33a3      	CPI  R26,LOW(0x33)
00063a f428      	BRSH _0xD2
00063b 940e 07df 	CALL SUBOPT_0x18
00063d 940e 07e5 	CALL SUBOPT_0x19
00063f cff7      	RJMP _0xD1
                 _0xD2:
                 ; 0000 0306         lcd_clear();
                 _0xCF:
000640 940e 06b8 	CALL _lcd_clear
                 ; 0000 0307         }
000642 940e 07eb 	CALL SUBOPT_0x1A
000644 cfe2      	RJMP _0xCD
                 _0xCE:
                 ; 0000 0308 
                 ; 0000 0309 
                 ; 0000 030A       }
000645 cf9b      	RJMP _0xBB
                 ; 0000 030B }
                 _0xD3:
000646 cfff      	RJMP _0xD3
                 ; .FEND
                 ;   /***
                 ;
                 ;lcd_gotoxy(0,0);
                 ;lcd_putsf("Hi World !");
                 ;
                 ;for (j=16;j>0;j--)
                 ;{
                 ;lcd_gotoxy(0,0);
                 ;lcd_putsf("Hi World !");
                 ;lcd_gotoxy((j),1);
                 ;lcd_putsf(" i'm RoboNoise.");
                 ;delay_ms(50);
                 ; if(j==1)
                 ; {
                 ; delay_ms(1500);
                 ;
                 ; }
                 ;lcd_clear();
                 ;}
                 ;for (j=8;j>0;j--)
                 ;{
                 ;lcd_gotoxy(0,0);
                 ;lcd_putsf("Hi World !");
                 ;lcd_gotoxy(1,j);
                 ;lcd_putsf("  Welcome ");
                 ;delay_ms(30);
                 ;if(j==1)
                 ; {
                 ; lcd_gotoxy(1,1);
                 ; lcd_putsf("  Welcome ");
                 ; delay_ms(200);
                 ; lcd_gotoxy(1,1);
                 ; lcd_putsf("           ");
                 ; delay_ms(200);
                 ; lcd_gotoxy(1,1);
                 ; lcd_putsf("  Welcome ");
                 ; delay_ms(200);
                 ; lcd_gotoxy(1,1);
                 ; lcd_putsf("           ");
                 ; delay_ms(200);
                 ; lcd_gotoxy(1,1);
                 ; lcd_putsf("  Welcome !");
                 ; delay_ms(500);
                 ;
                 ; }
                 ;lcd_clear();
                 ;}
                 ;
                 ;lcd_gotoxy(0,0);
                 ;lcd_putsf("Choose  Option  Menu:");
                 ;lcd_gotoxy(5,1);
                 ;lcd_putsf("    -1-2-3-  ");
                 ;delay_ms(1000);
                 ;lcd_clear();
                 ;lcd_gotoxy(0,0);
                 ;lcd_putsf("Choose:  1  2  3");
                 ;delay_ms(100);
                 ;
                 ;
                 ;
                 ;------------------------------------------------------------
                 ;
                 ;      if ( !SWL )
                 ;       {
                 ;
                 ;       delay_us(20);
                 ;       UsTrig=1;
                 ;       delay_us(20);
                 ;       UsTrig=0;
                 ;       delay_us(20);
                 ;
                 ;       k=u;
                 ;       LEDG(1);
                 ;         //   LineFollower ();
                 ;        }
                 ;
                 ;      else LEDG(0);
                 ; //     else UsKey=0;
                 ;
                 ;    // Time_us = ((cunter_us*10)+ (cunter_ms*1000) );
                 ;
                 ;//
                 ;       lcd_gotoxy(0,0);
                 ;       lcd_putsf("x:");
                 ;       lcd_gotoxy(4,0);
                 ;       ftoa(u,3,str);
                 ;       lcd_puts(str);
                 ;
                 ;       lcd_gotoxy(8,0);
                 ;       itoa(Time_us,str);
                 ;       lcd_puts(str);
                 ;//       if (!SWL )
                 ;//       {
                 ;//       KeySen=1;
                 ;//             }
                 ;//             else KeySen=0;
                 ;//
                 ;
                 ;//       lcd_gotoxy(0,1);
                 ;//       itoa(read_adc(4),str);
                 ;//       lcd_puts(str);
                 ;//
                 ;//       lcd_gotoxy(8,1);
                 ;//       itoa((p),str);
                 ;//       lcd_puts(str);
                 ;//
                 ;       delay_ms(150);
                 ;       lcd_clear();
                 ;//
                 ;
                 ;**/
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
000647 93ba      	ST   -Y,R27
000648 93aa      	ST   -Y,R26
000649 91a9          ld   r26,y+
00064a 91b9          ld   r27,y+
00064b 91e9          ld   r30,y+
00064c 91f9          ld   r31,y+
00064d 9630          adiw r30,0
00064e f42a          brpl __itoa0
00064f 95e0          com  r30
000650 95f0          com  r31
000651 9631          adiw r30,1
000652 e26d          ldi  r22,'-'
000653 936d          st   x+,r22
                 __itoa0:
000654 94e8          clt
000655 e180          ldi  r24,low(10000)
000656 e297          ldi  r25,high(10000)
000657 d00d          rcall __itoa1
000658 ee88          ldi  r24,low(1000)
000659 e093          ldi  r25,high(1000)
00065a d00a          rcall __itoa1
00065b e684          ldi  r24,100
00065c 2799          clr  r25
00065d d007          rcall __itoa1
00065e e08a          ldi  r24,10
00065f d005          rcall __itoa1
000660 2f6e          mov  r22,r30
000661 d010          rcall __itoa5
000662 2766          clr  r22
000663 936c          st   x,r22
000664 9508          ret
                 
                 __itoa1:
000665 2766          clr	 r22
                 __itoa2:
000666 17e8          cp   r30,r24
000667 07f9          cpc  r31,r25
000668 f020          brlo __itoa3
000669 9563          inc  r22
00066a 1be8          sub  r30,r24
00066b 0bf9          sbc  r31,r25
00066c f7c9          brne __itoa2
                 __itoa3:
00066d 2366          tst  r22
00066e f411          brne __itoa4
00066f f016          brts __itoa5
000670 9508          ret
                 __itoa4:
000671 9468          set
                 __itoa5:
000672 5d60          subi r22,-0x30
000673 936d          st   x+,r22
000674 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
000675 93aa      	ST   -Y,R26
000676 81e8      	LD   R30,Y
000677 71e0      	ANDI R30,LOW(0x10)
000678 f011      	BREQ _0x2040004
000679 9ac3      	SBI  0x18,3
00067a c001      	RJMP _0x2040005
                 _0x2040004:
00067b 98c3      	CBI  0x18,3
                 _0x2040005:
00067c 81e8      	LD   R30,Y
00067d 72e0      	ANDI R30,LOW(0x20)
00067e f011      	BREQ _0x2040006
00067f 9ac2      	SBI  0x18,2
000680 c001      	RJMP _0x2040007
                 _0x2040006:
000681 98c2      	CBI  0x18,2
                 _0x2040007:
000682 81e8      	LD   R30,Y
000683 74e0      	ANDI R30,LOW(0x40)
000684 f011      	BREQ _0x2040008
000685 9ac1      	SBI  0x18,1
000686 c001      	RJMP _0x2040009
                 _0x2040008:
000687 98c1      	CBI  0x18,1
                 _0x2040009:
000688 81e8      	LD   R30,Y
000689 78e0      	ANDI R30,LOW(0x80)
00068a f011      	BREQ _0x204000A
00068b 9a1f      	SBI  0x3,7
00068c c001      	RJMP _0x204000B
                 _0x204000A:
00068d 981f      	CBI  0x3,7
                 _0x204000B:
                +
00068e e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00068f 958a     +DEC R24
000690 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000691 9ac4      	SBI  0x18,4
                +
000692 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000693 958a     +DEC R24
000694 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000695 98c4      	CBI  0x18,4
                +
000696 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000697 958a     +DEC R24
000698 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000699 c09c      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00069a 93aa      	ST   -Y,R26
00069b 81a8      	LD   R26,Y
00069c dfd8      	RCALL __lcd_write_nibble_G102
00069d 81e8          ld    r30,y
00069e 95e2          swap  r30
00069f 83e8          st    y,r30
0006a0 81a8      	LD   R26,Y
0006a1 dfd3      	RCALL __lcd_write_nibble_G102
                +
0006a2 ec88     +LDI R24 , LOW ( 200 )
0006a3 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0006a4 9701     +SBIW R24 , 1
0006a5 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0006a6 c08f      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0006a7 93aa      	ST   -Y,R26
0006a8 81e8      	LD   R30,Y
0006a9 e0f0      	LDI  R31,0
0006aa 5ee7      	SUBI R30,LOW(-__base_y_G102)
0006ab 4ffa      	SBCI R31,HIGH(-__base_y_G102)
0006ac 81e0      	LD   R30,Z
0006ad 81a9      	LDD  R26,Y+1
0006ae 0fae      	ADD  R26,R30
0006af dfea      	RCALL __lcd_write_data
0006b0 81e9      	LDD  R30,Y+1
0006b1 93e0 051d 	STS  __lcd_x,R30
0006b3 81e8      	LD   R30,Y
0006b4 93e0 051e 	STS  __lcd_y,R30
0006b6 9622      	ADIW R28,2
0006b7 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0006b8 e0a2      	LDI  R26,LOW(2)
0006b9 940e 07f1 	CALL SUBOPT_0x1B
0006bb e0ac      	LDI  R26,LOW(12)
0006bc dfdd      	RCALL __lcd_write_data
0006bd e0a1      	LDI  R26,LOW(1)
0006be 940e 07f1 	CALL SUBOPT_0x1B
0006c0 e0e0      	LDI  R30,LOW(0)
0006c1 93e0 051e 	STS  __lcd_y,R30
0006c3 93e0 051d 	STS  __lcd_x,R30
0006c5 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0006c6 93aa      	ST   -Y,R26
0006c7 81a8      	LD   R26,Y
0006c8 30aa      	CPI  R26,LOW(0xA)
0006c9 f031      	BREQ _0x2040011
0006ca 91e0 051f 	LDS  R30,__lcd_maxx
0006cc 91a0 051d 	LDS  R26,__lcd_x
0006ce 17ae      	CP   R26,R30
0006cf f060      	BRLO _0x2040010
                 _0x2040011:
0006d0 e0e0      	LDI  R30,LOW(0)
0006d1 93ea      	ST   -Y,R30
0006d2 91a0 051e 	LDS  R26,__lcd_y
0006d4 5faf      	SUBI R26,-LOW(1)
0006d5 93a0 051e 	STS  __lcd_y,R26
0006d7 dfcf      	RCALL _lcd_gotoxy
0006d8 81a8      	LD   R26,Y
0006d9 30aa      	CPI  R26,LOW(0xA)
0006da f409      	BRNE _0x2040013
0006db c05a      	RJMP _0x20C0001
                 _0x2040013:
                 _0x2040010:
0006dc 91e0 051d 	LDS  R30,__lcd_x
0006de 5fef      	SUBI R30,-LOW(1)
0006df 93e0 051d 	STS  __lcd_x,R30
0006e1 9ac6      	SBI  0x18,6
0006e2 81a8      	LD   R26,Y
0006e3 dfb6      	RCALL __lcd_write_data
0006e4 98c6      	CBI  0x18,6
0006e5 c050      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0006e6 93ba      	ST   -Y,R27
0006e7 93aa      	ST   -Y,R26
0006e8 931a      	ST   -Y,R17
                 _0x2040014:
0006e9 81a9      	LDD  R26,Y+1
0006ea 81ba      	LDD  R27,Y+1+1
0006eb 91ed      	LD   R30,X+
0006ec 83a9      	STD  Y+1,R26
0006ed 83ba      	STD  Y+1+1,R27
0006ee 2f1e      	MOV  R17,R30
0006ef 30e0      	CPI  R30,0
0006f0 f019      	BREQ _0x2040016
0006f1 2fa1      	MOV  R26,R17
0006f2 dfd3      	RCALL _lcd_putchar
0006f3 cff5      	RJMP _0x2040014
                 _0x2040016:
0006f4 c010      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0006f5 93ba      	ST   -Y,R27
0006f6 93aa      	ST   -Y,R26
0006f7 931a      	ST   -Y,R17
                 _0x2040017:
0006f8 81e9      	LDD  R30,Y+1
0006f9 81fa      	LDD  R31,Y+1+1
0006fa 9631      	ADIW R30,1
0006fb 83e9      	STD  Y+1,R30
0006fc 83fa      	STD  Y+1+1,R31
0006fd 9731      	SBIW R30,1
0006fe 91e4      	LPM  R30,Z
0006ff 2f1e      	MOV  R17,R30
000700 30e0      	CPI  R30,0
000701 f019      	BREQ _0x2040019
000702 2fa1      	MOV  R26,R17
000703 dfc2      	RCALL _lcd_putchar
000704 cff3      	RJMP _0x2040017
                 _0x2040019:
                 _0x20C0002:
000705 8118      	LDD  R17,Y+0
000706 9623      	ADIW R28,3
000707 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000708 93aa      	ST   -Y,R26
000709 9abb      	SBI  0x17,3
00070a 9aba      	SBI  0x17,2
00070b 9ab9      	SBI  0x17,1
00070c 9a17      	SBI  0x2,7
00070d 9abc      	SBI  0x17,4
00070e 9abe      	SBI  0x17,6
00070f 9abd      	SBI  0x17,5
000710 98c4      	CBI  0x18,4
000711 98c6      	CBI  0x18,6
000712 98c5      	CBI  0x18,5
000713 81e8      	LD   R30,Y
000714 93e0 051f 	STS  __lcd_maxx,R30
000716 58e0      	SUBI R30,-LOW(128)
                +
000717 93e0 051b+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
000719 81e8      	LD   R30,Y
00071a 54e0      	SUBI R30,-LOW(192)
                +
00071b 93e0 051c+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
00071d e1a4      	LDI  R26,LOW(20)
00071e e0b0      	LDI  R27,0
00071f 940e 07ff 	CALL _delay_ms
000721 940e 07f7 	CALL SUBOPT_0x1C
000723 940e 07f7 	CALL SUBOPT_0x1C
000725 940e 07f7 	CALL SUBOPT_0x1C
000727 e2a0      	LDI  R26,LOW(32)
000728 df4c      	RCALL __lcd_write_nibble_G102
                +
000729 e980     +LDI R24 , LOW ( 400 )
00072a e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
00072b 9701     +SBIW R24 , 1
00072c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
00072d e2a8      	LDI  R26,LOW(40)
00072e df6b      	RCALL __lcd_write_data
00072f e0a4      	LDI  R26,LOW(4)
000730 df69      	RCALL __lcd_write_data
000731 e8a5      	LDI  R26,LOW(133)
000732 df67      	RCALL __lcd_write_data
000733 e0a6      	LDI  R26,LOW(6)
000734 df65      	RCALL __lcd_write_data
000735 df82      	RCALL _lcd_clear
                 _0x20C0001:
000736 9621      	ADIW R28,1
000737 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _str:
000500           	.BYTE 0x5
                 _f:
000505           	.BYTE 0x1
                 _p:
000506           	.BYTE 0x1
                 _e:
000507           	.BYTE 0x1
                 _j:
000508           	.BYTE 0x1
                 _j1:
000509           	.BYTE 0x1
                 _Time_us:
00050a           	.BYTE 0x2
                 _cunter_ms:
00050c           	.BYTE 0x2
                 _cunter_us:
00050e           	.BYTE 0x2
                 _u:
000510           	.BYTE 0x4
                 _k:
000514           	.BYTE 0x1
                 __seed_G100:
000515           	.BYTE 0x4
                 __base_y_G102:
000519           	.BYTE 0x4
                 __lcd_x:
00051d           	.BYTE 0x1
                 __lcd_y:
00051e           	.BYTE 0x1
                 __lcd_maxx:
00051f           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000738 e0e0      	LDI  R30,LOW(0)
000739 93e0 050e 	STS  _cunter_us,R30
00073b 93e0 050f 	STS  _cunter_us+1,R30
00073d 93e0 050c 	STS  _cunter_ms,R30
00073f 93e0 050d 	STS  _cunter_ms+1,R30
000741 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000742 efef      	LDI  R30,LOW(255)
000743 bded      	OUT  0x2D,R30
000744 e6e0      	LDI  R30,LOW(96)
000745 bdec      	OUT  0x2C,R30
000746 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
000747 e0a0      	LDI  R26,0
000748 9999      	SBIC 0x13,1
000749 e0a1      	LDI  R26,1
00074a e0e0      	LDI  R30,0
00074b fc20      	SBRC R2,0
00074c e0e1      	LDI  R30,1
00074d 27ea      	EOR  R30,R26
00074e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
00074f e0a0      	LDI  R26,0
000750 999a      	SBIC 0x13,2
000751 e0a1      	LDI  R26,1
000752 e0e0      	LDI  R30,0
000753 fc20      	SBRC R2,0
000754 e0e1      	LDI  R30,1
000755 27ea      	EOR  R30,R26
000756 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x4:
000757 e0e0      	LDI  R30,LOW(0)
000758 93ea      	ST   -Y,R30
000759 93ea      	ST   -Y,R30
00075a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x5:
00075b 2da9      	MOV  R26,R9
00075c 940e 025c 	CALL _Move
00075e e0e0      	LDI  R30,LOW(0)
00075f 93ea      	ST   -Y,R30
000760 e0a0      	LDI  R26,LOW(0)
000761 940c 06a7 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:77 WORDS
                 SUBOPT_0x6:
000763 940e 025c 	CALL _Move
000765 e0e0      	LDI  R30,LOW(0)
000766 93ea      	ST   -Y,R30
000767 e0a0      	LDI  R26,LOW(0)
000768 940c 06a7 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x7:
00076a e0e0      	LDI  R30,0
00076b fc20      	SBRC R2,0
00076c e0e1      	LDI  R30,1
00076d 27ea      	EOR  R30,R26
00076e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x8:
00076f e0e0      	LDI  R30,LOW(0)
000770 93ea      	ST   -Y,R30
000771 e0a0      	LDI  R26,LOW(0)
000772 940c 06a7 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
000774 e0e0      	LDI  R30,LOW(0)
000775 93ea      	ST   -Y,R30
000776 e0e1      	LDI  R30,LOW(1)
000777 93ea      	ST   -Y,R30
000778 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000779 e0e1      	LDI  R30,LOW(1)
00077a 93ea      	ST   -Y,R30
00077b e0e0      	LDI  R30,LOW(0)
00077c 93ea      	ST   -Y,R30
00077d ebee      	LDI  R30,LOW(190)
00077e 93ea      	ST   -Y,R30
00077f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000780 93ea      	ST   -Y,R30
000781 efaf      	LDI  R26,LOW(255)
000782 cfe0      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
000783 e0e1      	LDI  R30,LOW(1)
000784 93ea      	ST   -Y,R30
000785 e0e0      	LDI  R30,LOW(0)
000786 93ea      	ST   -Y,R30
000787 efef      	LDI  R30,LOW(255)
000788 93ea      	ST   -Y,R30
000789 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
00078a 9468      	SET
00078b f821      	BLD  R2,1
00078c e1a4      	LDI  R26,LOW(20)
00078d e0b0      	LDI  R27,0
00078e 940c 07ff 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xE:
000790 940e 06f5 	CALL _lcd_putsf
000792 e0ed      	LDI  R30,LOW(13)
000793 93ea      	ST   -Y,R30
000794 e0a0      	LDI  R26,LOW(0)
000795 940e 06a7 	CALL _lcd_gotoxy
                +
000797 efae     +LDI R26 , LOW ( 2 * _0x0 + ( 88 ) )
000798 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 88 ) )
                 	__POINTW2FN _0x0,88
000799 940e 06f5 	CALL _lcd_putsf
00079b e0e0      	LDI  R30,LOW(0)
00079c 93ea      	ST   -Y,R30
00079d e0a1      	LDI  R26,LOW(1)
00079e 940c 06a7 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF:
0007a0 940e 06f5 	CALL _lcd_putsf
0007a2 e0e0      	LDI  R30,LOW(0)
0007a3 93ea      	ST   -Y,R30
0007a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
0007a5 940e 06a7 	CALL _lcd_gotoxy
0007a7 2de9      	MOV  R30,R9
0007a8 e0f0      	LDI  R31,0
0007a9 93fa      	ST   -Y,R31
0007aa 93ea      	ST   -Y,R30
0007ab e0a0      	LDI  R26,LOW(_str)
0007ac e0b5      	LDI  R27,HIGH(_str)
0007ad 940e 0647 	CALL _itoa
0007af e0a0      	LDI  R26,LOW(_str)
0007b0 e0b5      	LDI  R27,HIGH(_str)
0007b1 940c 06e6 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x11:
0007b3 93ea      	ST   -Y,R30
0007b4 e0a1      	LDI  R26,LOW(1)
0007b5 940c 06a7 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
0007b7 91a0 0510 	LDS  R26,_u
0007b9 91b0 0511 	LDS  R27,_u+1
0007bb 9180 0512 	LDS  R24,_u+2
0007bd 9190 0513 	LDS  R25,_u+3
0007bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
0007c0 940e 06f5 	CALL _lcd_putsf
0007c2 eea8      	LDI  R26,LOW(1000)
0007c3 e0b3      	LDI  R27,HIGH(1000)
0007c4 940c 07ff 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
0007c6 e0b0      	LDI  R27,0
0007c7 940e 07ff 	CALL _delay_ms
0007c9 e0e0      	LDI  R30,LOW(0)
0007ca cfe8      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
0007cb 940e 044a 	CALL _choose
0007cd cfa1      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x16:
                +
0007ce efaa     +LDI R26 , LOW ( 2 * _0x0 + ( 340 ) )
0007cf e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 340 ) )
                 	__POINTW2FN _0x0,340
0007d0 940e 06f5 	CALL _lcd_putsf
0007d2 91e0 0508 	LDS  R30,_j
0007d4 cfde      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x17:
0007d5 940e 06f5 	CALL _lcd_putsf
0007d7 e0af      	LDI  R26,LOW(15)
0007d8 e0b0      	LDI  R27,0
0007d9 940e 07ff 	CALL _delay_ms
0007db 91a0 0508 	LDS  R26,_j
0007dd 30a1      	CPI  R26,LOW(0x1)
0007de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18:
0007df 940e 044a 	CALL _choose
0007e1 e1a4      	LDI  R26,LOW(20)
0007e2 e0b0      	LDI  R27,0
0007e3 940c 07ff 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
0007e5 91e0 0509 	LDS  R30,_j1
0007e7 5fef      	SUBI R30,-LOW(1)
0007e8 93e0 0509 	STS  _j1,R30
0007ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
0007eb 91e0 0508 	LDS  R30,_j
0007ed 50e1      	SUBI R30,LOW(1)
0007ee 93e0 0508 	STS  _j,R30
0007f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
0007f1 940e 069a 	CALL __lcd_write_data
0007f3 e0a3      	LDI  R26,LOW(3)
0007f4 e0b0      	LDI  R27,0
0007f5 940c 07ff 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1C:
0007f7 e3a0      	LDI  R26,LOW(48)
0007f8 940e 0675 	CALL __lcd_write_nibble_G102
                +
0007fa e980     +LDI R24 , LOW ( 400 )
0007fb e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
0007fc 9701     +SBIW R24 , 1
0007fd f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
0007fe 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0007ff 9610      	adiw r26,0
000800 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000801 ea80     +LDI R24 , LOW ( 0xFA0 )
000802 e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
000803 9701     +SBIW R24 , 1
000804 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
000805 95a8      	wdr
000806 9711      	sbiw r26,1
000807 f7c9      	brne __delay_ms0
                 __delay_ms1:
000808 9508      	ret
                 
                 __REPACK:
000809 e850      	LDI  R21,0x80
00080a 2757      	EOR  R21,R23
00080b f411      	BRNE __REPACK0
00080c 935f      	PUSH R21
00080d c06b      	RJMP __ZERORES
                 __REPACK0:
00080e 3f5f      	CPI  R21,0xFF
00080f f031      	BREQ __REPACK1
000810 0f66      	LSL  R22
000811 0c00      	LSL  R0
000812 9557      	ROR  R21
000813 9567      	ROR  R22
000814 2f75      	MOV  R23,R21
000815 9508      	RET
                 __REPACK1:
000816 935f      	PUSH R21
000817 2000      	TST  R0
000818 f00a      	BRMI __REPACK2
000819 c06b      	RJMP __MAXRES
                 __REPACK2:
00081a c064      	RJMP __MINRES
                 
                 __UNPACK1:
00081b e850      	LDI  R21,0x80
00081c 2e07      	MOV  R0,R23
00081d 2205      	AND  R0,R21
00081e 0f66      	LSL  R22
00081f 1f77      	ROL  R23
000820 2775      	EOR  R23,R21
000821 0f55      	LSL  R21
000822 9567      	ROR  R22
000823 9508      	RET
                 
                 __CFD1U:
000824 9468      	SET
000825 c001      	RJMP __CFD1U0
                 __CFD1:
000826 94e8      	CLT
                 __CFD1U0:
000827 935f      	PUSH R21
000828 dff2      	RCALL __UNPACK1
000829 3870      	CPI  R23,0x80
00082a f018      	BRLO __CFD10
00082b 3f7f      	CPI  R23,0xFF
00082c f408      	BRCC __CFD10
00082d c04b      	RJMP __ZERORES
                 __CFD10:
00082e e156      	LDI  R21,22
00082f 1b57      	SUB  R21,R23
000830 f4aa      	BRPL __CFD11
000831 9551      	NEG  R21
000832 3058      	CPI  R21,8
000833 f40e      	BRTC __CFD19
000834 3059      	CPI  R21,9
                 __CFD19:
000835 f030      	BRLO __CFD17
000836 efef      	SER  R30
000837 efff      	SER  R31
000838 ef6f      	SER  R22
000839 e77f      	LDI  R23,0x7F
00083a f977      	BLD  R23,7
00083b c01a      	RJMP __CFD15
                 __CFD17:
00083c 2777      	CLR  R23
00083d 2355      	TST  R21
00083e f0b9      	BREQ __CFD15
                 __CFD18:
00083f 0fee      	LSL  R30
000840 1fff      	ROL  R31
000841 1f66      	ROL  R22
000842 1f77      	ROL  R23
000843 955a      	DEC  R21
000844 f7d1      	BRNE __CFD18
000845 c010      	RJMP __CFD15
                 __CFD11:
000846 2777      	CLR  R23
                 __CFD12:
000847 3058      	CPI  R21,8
000848 f028      	BRLO __CFD13
000849 2fef      	MOV  R30,R31
00084a 2ff6      	MOV  R31,R22
00084b 2f67      	MOV  R22,R23
00084c 5058      	SUBI R21,8
00084d cff9      	RJMP __CFD12
                 __CFD13:
00084e 2355      	TST  R21
00084f f031      	BREQ __CFD15
                 __CFD14:
000850 9576      	LSR  R23
000851 9567      	ROR  R22
000852 95f7      	ROR  R31
000853 95e7      	ROR  R30
000854 955a      	DEC  R21
000855 f7d1      	BRNE __CFD14
                 __CFD15:
000856 2000      	TST  R0
000857 f40a      	BRPL __CFD16
000858 d032      	RCALL __ANEGD1
                 __CFD16:
000859 915f      	POP  R21
00085a 9508      	RET
                 
                 __CDF1U:
00085b 9468      	SET
00085c c001      	RJMP __CDF1U0
                 __CDF1:
00085d 94e8      	CLT
                 __CDF1U0:
00085e 9730      	SBIW R30,0
00085f 4060      	SBCI R22,0
000860 4070      	SBCI R23,0
000861 f0b1      	BREQ __CDF10
000862 2400      	CLR  R0
000863 f026      	BRTS __CDF11
000864 2377      	TST  R23
000865 f412      	BRPL __CDF11
000866 9400      	COM  R0
000867 d023      	RCALL __ANEGD1
                 __CDF11:
000868 2e17      	MOV  R1,R23
000869 e17e      	LDI  R23,30
00086a 2011      	TST  R1
                 __CDF12:
00086b f032      	BRMI __CDF13
00086c 957a      	DEC  R23
00086d 0fee      	LSL  R30
00086e 1fff      	ROL  R31
00086f 1f66      	ROL  R22
000870 1c11      	ROL  R1
000871 cff9      	RJMP __CDF12
                 __CDF13:
000872 2fef      	MOV  R30,R31
000873 2ff6      	MOV  R31,R22
000874 2d61      	MOV  R22,R1
000875 935f      	PUSH R21
000876 df92      	RCALL __REPACK
000877 915f      	POP  R21
                 __CDF10:
000878 9508      	RET
                 
                 __ZERORES:
000879 27ee      	CLR  R30
00087a 27ff      	CLR  R31
00087b 2766      	CLR  R22
00087c 2777      	CLR  R23
00087d 915f      	POP  R21
00087e 9508      	RET
                 
                 __MINRES:
00087f efef      	SER  R30
000880 efff      	SER  R31
000881 e76f      	LDI  R22,0x7F
000882 ef7f      	SER  R23
000883 915f      	POP  R21
000884 9508      	RET
                 
                 __MAXRES:
000885 efef      	SER  R30
000886 efff      	SER  R31
000887 e76f      	LDI  R22,0x7F
000888 e77f      	LDI  R23,0x7F
000889 915f      	POP  R21
00088a 9508      	RET
                 
                 __ANEGD1:
00088b 95f0      	COM  R31
00088c 9560      	COM  R22
00088d 9570      	COM  R23
00088e 95e1      	NEG  R30
00088f 4fff      	SBCI R31,-1
000890 4f6f      	SBCI R22,-1
000891 4f7f      	SBCI R23,-1
000892 9508      	RET
                 
                 __CWD1:
000893 2f6f      	MOV  R22,R31
000894 0f66      	ADD  R22,R22
000895 0b66      	SBC  R22,R22
000896 2f76      	MOV  R23,R22
000897 9508      	RET
                 
                 __MULW12U:
000898 9ffa      	MUL  R31,R26
000899 2df0      	MOV  R31,R0
00089a 9feb      	MUL  R30,R27
00089b 0df0      	ADD  R31,R0
00089c 9fea      	MUL  R30,R26
00089d 2de0      	MOV  R30,R0
00089e 0df1      	ADD  R31,R1
00089f 9508      	RET
                 
                 __DIVW21U:
0008a0 2400      	CLR  R0
0008a1 2411      	CLR  R1
0008a2 e190      	LDI  R25,16
                 __DIVW21U1:
0008a3 0faa      	LSL  R26
0008a4 1fbb      	ROL  R27
0008a5 1c00      	ROL  R0
0008a6 1c11      	ROL  R1
0008a7 1a0e      	SUB  R0,R30
0008a8 0a1f      	SBC  R1,R31
0008a9 f418      	BRCC __DIVW21U2
0008aa 0e0e      	ADD  R0,R30
0008ab 1e1f      	ADC  R1,R31
0008ac c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0008ad 60a1      	SBR  R26,1
                 __DIVW21U3:
0008ae 959a      	DEC  R25
0008af f799      	BRNE __DIVW21U1
0008b0 01fd      	MOVW R30,R26
0008b1 01d0      	MOVW R26,R0
0008b2 9508      	RET
                 
                 __PUTDP1:
0008b3 93ed      	ST   X+,R30
0008b4 93fd      	ST   X+,R31
0008b5 936d      	ST   X+,R22
0008b6 937c      	ST   X,R23
0008b7 9508      	RET
                 
                 __BSTB1:
0008b8 94e8      	CLT
0008b9 23ee      	TST  R30
0008ba f009      	BREQ PC+2
0008bb 9468      	SET
0008bc 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega64A register use summary:
r0 :  21 r1 :  12 r2 :  31 r3 :   0 r4 :   0 r5 :   0 r6 :   3 r7 :   3 
r8 :   0 r9 :  27 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:   0 r17:   7 r18:   0 r19:   0 r20:   0 r21:  29 r22:  41 r23:  31 
r24:  38 r25:  18 r26: 241 r27:  89 r28:   6 r29:   1 r30: 402 r31:  46 
x  :  19 y  : 140 z  :   9 
Registers used: 22 out of 35 (62.9%)

ATmega64A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   5 
adiw  :  11 and   :   1 andi  :  14 asr   :   0 bclr  :   0 bld   :  12 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  45 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   2 brne  :  34 brpl  :   4 brsh  :   3 brtc  :   1 
brts  :   2 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 215 
cbi   :  16 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  17 cls   :   0 clt   :  10 clv   :   0 clz   :   0 com   :   6 
cp    :   6 cpc   :   8 cpi   :  24 cpse  :   0 dec   :  11 des   :   0 
eor   :   5 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   5 inc   :   1 jmp   :  47 ld    :  48 ldd   :  11 ldi   : 357 
lds   :  42 lpm   :   9 lsl   :   7 lsr   :   1 mov   :  35 movw  :   6 
mul   :   3 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   4 out   :  50 pop   :   5 push  :   4 rcall :  36 ret   :  40 
reti  :   3 rjmp  : 125 rol   :  10 ror   :   6 sbc   :   3 sbci  :   6 
sbi   :  19 sbic  :  32 sbis  :  13 sbiw  :  11 sbr   :   1 sbrc  :  10 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   7 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  97 std   :   4 sts   :  59 sub   :   5 subi  :  21 swap  :   1 
tst   :   8 wdr   :   1 
Instructions used: 70 out of 116 (60.3%)

ATmega64A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00117a   4000    474   4474   65536   6.8%
[.dseg] 0x000100 0x000520      0     32     32    4096   0.8%
[.eseg] 0x000000 0x000000      0      0      0    2048   0.0%

Assembly complete, 0 errors, 16 warnings
